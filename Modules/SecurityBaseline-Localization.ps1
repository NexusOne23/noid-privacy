# =======================================================================================
# SecurityBaseline-Localization.ps1 - Multi-Language Support (EN/DE)
# =======================================================================================

# Enable Strict Mode
Set-StrictMode -Version Latest

# Default: English (only if not set yet!)
# IMPORTANT: Do not overwrite if already set (e.g. from parent script)
# IMPORTANT: Use Test-Path because of Strict Mode!
if (-not (Test-Path Variable:\Global:CurrentLanguage)) {
    $Global:CurrentLanguage = "en"
}

$Global:Strings = @{
    en = @{
        # Banner
        BannerTitle = "NoID Privacy - Windows 11 25H2 Security Baseline"
        BannerSubtitle = "Maximum Security + Privacy + Performance"
        
        # Main Menu
        MainMenuTitle = "MAIN MENU"
        MainMenuAudit = "Audit Mode"
        MainMenuAuditDesc = "Check only, change NOTHING (recommended for testing)"
        MainMenuEnforce = "Enforce Mode"
        MainMenuEnforceDesc = "Apply EVERYTHING (full hardening)"
        MainMenuCustom = "Custom Mode"
        MainMenuCustomDesc = "Select modules individually"
        MainMenuVerify = "Verify"
        MainMenuVerifyDesc = "Check if baseline is applied"
        MainMenuExit = "Exit"
        MainMenuExitDesc = "Quit"
        MainMenuPrompt = "Your choice"
        
        # Enforce Mode Banner
        EnforceBannerTitle = "ENFORCE MODE - PRODUCTION MODE (FULL PROTECTION):"
        EnforceBannerWarning1 = "WARNING: All changes will be ACTIVELY applied!"
        EnforceBannerWarning2 = "This is NOT reversible without Backup/Restore!"
        EnforceBannerModulesTitle = "ALL modules will be FULLY activated:"
        EnforceBannerSecurityTitle = "SECURITY:"
        EnforceBannerSecurity1 = "Microsoft Security Baseline 25H2 (Defender, Firewall, Services)"
        EnforceBannerSecurity2 = "ASR Rules (23 Rules ENFORCE MODE = actively blocking!)"
        EnforceBannerSecurity3 = "VBS + Credential Guard + HVCI + LSA Protection"
        EnforceBannerSecurity4 = "BitLocker Policies (XTS-AES-256 + TPM 2.0)"
        EnforceBannerSecurity5 = "UAC Maximum + Enhanced Privilege Protection"
        EnforceBannerSecurityMore = "... and much more!"
        EnforceBannerNetworkTitle = "NETWORK:"
        EnforceBannerNetwork1 = "DNS over HTTPS (Cloudflare 1.1.1.1 - encrypted!)"
        EnforceBannerNetwork2 = "DNS Blocklist (80,000+ Malware/Tracking-Domains)"
        EnforceBannerNetwork3 = "Firewall Default Deny + Block All Inbound"
        EnforceBannerNetwork4 = "SMB Signing + NetBIOS + LLMNR + mDNS disabled"
        EnforceBannerNetwork5 = "Remote Access completely OFF (RDP, WinRM, RemoteRegistry)"
        EnforceBannerNetworkMore = "... and much more!"
        EnforceBannerPrivacyTitle = "PRIVACY:"
        EnforceBannerPrivacy1 = "37 App Permissions set to 'Deny' (Camera/Mic/Location/etc.)"
        EnforceBannerPrivacy2 = "Wireless Display/Miracast completely disabled"
        EnforceBannerPrivacy3 = "Telemetry Security-Level (Required Diagnostic Data only)"
        EnforceBannerPrivacy4 = "OneDrive Auto-Upload blocked (User has control!)"
        EnforceBannerPrivacy5 = "AI Features blocked (Recall, Copilot, Click to Do, Paint AI)"
        EnforceBannerPrivacyMore = "... and much more!"
        EnforceBannerBloatwareTitle = "BLOATWARE & PERFORMANCE:"
        EnforceBannerBloatware1 = "50+ pre-installed apps removed (Xbox, Cortana, etc.)"
        EnforceBannerBloatware2 = "Consumer Features disabled (no auto-install of Candy Crush!)"
        EnforceBannerBloatware3 = "100+ Scheduled Tasks disabled (less CPU load)"
        EnforceBannerBloatware4 = "Event Logs optimized (less Disk I/O)"
        EnforceBannerBloatware5 = "Background Activities + Startup Apps reduced"
        EnforceBannerBloatwareMore = "... and much more!"
        EnforceBannerConfirm = "Do you REALLY want to continue? [Y/N]:"
        EnforceBannerStarting = "Starting Enforce Mode..."
        
        # Language Selection
        LanguagePrompt = "Select language / Sprache waehlen"
        LanguageEnglish = "English"
        LanguageGerman = "German / Deutsch"
        
        # Module Selection
        ModuleSelectionTitle = "MODULE SELECTION (Custom Mode)"
        ModuleSelectionInstructions = "Use UP/DOWN to navigate, SPACE to enable/disable"
        ModuleSelectionConfirm = "ENTER to confirm and start"
        ModuleMandatory = "(Mandatory)"
        
        # Modules
        ModuleCore = "Security Baseline Core"
        ModuleCoreDesc = "Base hardening - NetBIOS + Auditing + Print Spooler + etc."
        ModuleASR = "ASR Rules (Attack Surface Reduction)"
        ModuleASRDesc = "19 ASR rules + USB Control + Smart App Control"
        ModuleAdvanced = "Advanced Security"
        ModuleAdvancedDesc = "VBS + Credential Guard + BitLocker + LAPS"
        ModuleDNS = "DNS Security"
        ModuleDNSDesc = "DNSSEC + DNS Blocklist (80K Domains) + Firewall"
        ModuleBloatware = "Bloatware Removal"
        ModuleBloatwareDesc = "Remove pre-installed apps - games and ads"
        ModuleTelemetry = "Telemetry Deactivation"
        ModuleTelemetryDesc = "95% telemetry disabled"
        ModulePerformance = "Performance Optimization"
        ModulePerformanceDesc = "Scheduled Tasks + Event Logs + Background Activities"
        
        # Reboot Prompt
        RebootTitle = "REBOOT REQUIRED"
        RebootChanges = "The following changes require a reboot:"
        RebootVBS = "VBS/Credential Guard (Hardware-Security)"
        RebootBitLocker = "BitLocker Policies"
        RebootFirewall = "Firewall Rules"
        RebootServices = "Service Changes"
        RebootRegistry = "Registry Settings"
        RebootPerformance = "Performance Optimizations"
        RebootWarning = "Without reboot, some features are NOT active!"
        RebootQuestion = "What would you like to do?"
        RebootNow = "Reboot now"
        RebootNowDesc = "Countdown 10 seconds, then reboot"
        RebootLater = "Reboot later"
        RebootLaterDesc = "You must reboot manually!"
        RebootPrompt = "Your choice"
        RebootChoiceFormat = "[Y/N]:"
        RebootCountdown = "Reboot in:"
        RebootSeconds = "seconds..."
        RebootAbortHint = "(CTRL+C to abort)"
        RebootStarting = "System is rebooting..."
        RebootPostponed = "Reboot was postponed."
        RebootImportant = "IMPORTANT: Please reboot your computer manually!"
        RebootFeaturesActive = "The following features are only active after reboot:"
        RebootManualCommand = "You can reboot now with 'shutdown /r /t 0'."
        RebootErrorTitle = "Reboot could not be executed!"
        RebootErrorDetails = "Details: {0}"
        RebootManualRestartPrompt = "Please restart your computer manually:"
        RebootManualRestartCommand = "shutdown /r /t 0"
        RebootSkipped = "Reboot was skipped (-SkipReboot parameter)"
        RebootSkippedWarning = "Some changes will only be active after reboot!"
        
        # CTRL+C Handler
        AbortUserCancelled = "[ABORT] User cancelled script with CTRL+C!"
        AbortCleanup = "[i] Performing cleanup..."
        AbortComplete = "[OK] Cleanup complete"
        AbortExited = "[i] Script safely terminated"
        
        # Instance/Mutex Errors
        ErrorInstanceRunning = "[ERROR] Script is already running!"
        ErrorInstanceParallel = "The Security Baseline Script cannot be executed in parallel."
        ErrorInstanceReason = "Reason: Registry/Service changes would interfere with each other."
        ErrorInstanceWait = "Please wait until the other instance finishes."
        
        # Module Loading
        InfoCalculatingOrder = "[i] Calculating module load order..."
        InfoLoadingModules = "[i] Loading modules..."
        InfoLoadedModule = "[i] Module loaded:"
        ErrorLoadModule = "[ERROR] Could not load module:"
        
        # Restore Mode Messages
        RestoreModeActivated = "RESTORE MODE ACTIVATED"
        RestoreModeApplyExiting = "[i] Apply-Script is EXITING"
        RestoreModeStarting = "[i] Restore-Script starting..."
        RestoreModeProcessStart = "[i] Starting restore process (please wait)..."
        RestoreModeScriptComplete = "[i] Restore-Script completed (Exit-Code: {0})"
        RestoreModeApplyExitNow = "[i] Apply-Script exiting NOW (Environment.Exit)..."
        RestoreModeNotFound = "[ERROR] Restore-Script not found: {0}"
        
        # Backup Creation Messages
        BackupFullCreating = "COMPLETE BACKUP BEING CREATED"
        BackupIncludes = "[i] Backup includes:"
        BackupIncludesDNS = "    - DNS Settings (all adapters)"
        BackupIncludesHosts = "    - Hosts file (current version)"
        BackupIncludesServices = "    - All Services (StartType)"
        BackupIncludesFirewall = "    - Firewall Rules (status)"
        BackupIncludesRegistry = "    - Registry Keys (important ones)"
        BackupIncludesUsers = "    - User Accounts (names)"
        BackupIncludesApps = "    - Installed Apps (list)"
        BackupDuration = "[i] Expected duration: 2-3 minutes (max 6 min)"
        BackupRunning = "[i] Backup running now - please wait..."
        BackupFailed = "[ERROR] Backup failed (Exit-Code: {0})"
        BackupContinueRP = "Continuing with Restore Point only..."
        BackupNotFound = "[WARNING] Backup-Script not found: {0}"
        BackupFallbackRP = "[WARNING] Continuing with Restore Point only..."
        
        # Critical Errors
        CriticalCodeAfterRestore = "[CRITICAL ERROR] Code should not continue after Restore!"
        CriticalRestoreNotCaught = "[CRITICAL ERROR] Restore mode was not caught!"
        CriticalForcingExit = "[CRITICAL ERROR] Forcing exit..."
        CriticalNeverReached = "[ERROR] This line should NEVER be displayed!"
        
        # Logging
        VerboseOldLogsCleared = "Old transcript logs cleared: {0} files"
        VerboseLoadOrder = "Load order: {0}"
        VerboseTranscriptStarted = "Transcript started: {0}"
        WarningTranscriptFailed = "Could not start transcript: {0}"
        WarningTranscriptContinue = "Continuing without transcript logging..."
        
        # Backup Success & Abort Messages
        BackupSuccessComplete = "BACKUP SUCCESSFULLY COMPLETED"
        BackupCanRestore = "[OK] Backup can be restored anytime:"
        BackupRunRestore = "     Run Restore-SecurityBaseline.ps1"
        BackupAbortTitle = "[ABORT] Backup failed and user cancelled!"
        BackupAbortNoScript = "Main script will NOT continue."
        BackupAbortReason = "Reason: No safety net (no backup, no restore point)."
        BackupAbortRecommend = "Recommendation:"
        BackupAbortStep1 = "1. Fix the problem (see error above)"
        BackupAbortStep2 = "2. Run script again"
        BackupAbortStep3 = "3. Or: Create manual Restore Point and continue"
        BackupValidationSuccess = "[SUCCESS] BACKUP SUCCESSFULLY VALIDATED!"
        
        # Privacy Settings User Messages (App Permissions, NOT Hardware!)
        CameraMicDefaultOff = "App permissions for Camera and Microphone: REMOVED"
        CameraMicUserCan = "To allow apps again: Settings | Privacy | Camera/Microphone:"
        CameraMicStep1 = "  1. Enable master-switch"
        CameraMicStep2 = "  2. Then allow individual apps"
        CameraMicBestPractice = "NOTE: Hardware devices are still ACTIVE! Disable in Device Manager if needed."
        
        # Progress
        ProgressCore = "Core Security Baseline..."
        ProgressASR = "Attack Surface Reduction..."
        ProgressAdvanced = "Advanced Security (VBS + BitLocker + LAPS)..."
        ProgressDNS = "DNS Security and Firewall..."
        ProgressBloatware = "Bloatware Removal..."
        ProgressTelemetry = "Telemetry Deactivation..."
        ProgressPerformance = "Performance Optimization..."
        
        # Success Messages
        SuccessCore = "Core Security Baseline completed!"
        SuccessASR = "ASR Rules activated"
        SuccessAdvanced = "Advanced Security activated!"
        SuccessDNS = "DNS Security and Firewall configured!"
        SuccessBloatware = "Bloatware removed!"
        SuccessTelemetry = "Telemetry disabled!"
        SuccessPerformance = "Performance optimized!"
        SuccessFinal = "Security Baseline successfully applied!"
        SuccessReport = "Compliance Report:"
        
        # Errors
        ErrorGeneral = "ERROR:"
        ErrorInvalidInput = "Invalid input! Valid options:"
        ErrorEmptyInput = "Empty input not allowed!"
        ErrorInputFailed = "Input error: {0}"
        ErrorClearHostFailed = "Clear-Host not available (non-interactive session)"
        ErrorInteractiveRequired = "This function requires an interactive PowerShell session."
        ErrorKeyboardFailed = "Keyboard input failed: {0}"
        ErrorReadKeyFailed = "ReadKey failed: {0}"
        ErrorExpected = "Expected:"
        
        # Common Strings
        ConfirmYes = "Y"
        ConfirmNo = "N"
        PressAnyKey = "Press any key..."
        PressAnyKeyToReturn = "Press any key to return..."
        PressEnter = "Press Enter"
        
        # Goodbye
        Goodbye = "Goodbye!"
        
        # AI Module
        AIRecallTitle = "Windows Recall - COMPLETE DISABLEMENT"
        AIRecallDisabled = "Windows Recall: COMPLETELY DISABLED"
        AIRecallNightmare = "Recall was a PRIVACY NIGHTMARE - screenshots of passwords, banking, etc.!"
        AIRecallSnapshotsDeleted = "All existing snapshots will be deleted at next login"
        AICopilotTitle = "Windows Copilot - MULTI-LAYER BLOCKING"
        AICopilotBlocked = "Windows Copilot: MULTI-LAYER BLOCKED"
        AICopilot4Layers = "Blocked on 4 levels (Microsoft constantly changes paths!)"
        AICopilotIconRemoved = "Copilot icon will be removed from taskbar"
        AIClickToDoTitle = "Click to Do - DISABLE"
        AIClickToDoDisabled = "Click to Do: DISABLED"
        AIClickToDoNoAnalysis = "No more AI-based screenshot analysis"
        AIPaintTitle = "Paint AI Features - DISABLE"
        AIPaintDisabled = "Paint AI Features: ALL DISABLED"
        AIPaintFeatures = "Cocreator, Generative Fill, Image Creator = OFF"
        AINotepadTitle = "Notepad AI Features - DISABLE"
        AINotepadDisabled = "Notepad AI Features: DISABLED"
        AINotepadFeatures = "Copilot Button + AI Assistance in Notepad = OFF"
        AISettingsAgentTitle = "Settings Agent - DISABLE"
        AISettingsAgentDisabled = "Settings Agent: DISABLED"
        AICopilotProactiveTitle = "Copilot Best Practice 25H2 - DISABLE"
        AICopilotProactiveDisabled = "Copilot Proactive: DISABLED"
        AIRecallStorageTitle = "Recall Storage Limits - MINIMUM"
        AIRecallStorageMinimum = "Recall Storage Limits: SET TO MINIMUM"
        AIRecallStorageFallback = "Fallback if Recall is reactivated: Only 10GB for 1 day"
        AILockdownSummary = "  AI LOCKDOWN - SUMMARY"
        AIDisabled = "DISABLED:"
        AIRecallScreenshots = "  [X] Windows Recall (Screenshots)"
        AICopilotMultiLayer = "  [X] Windows Copilot (Multi-Layer)"
        AIClickToDoAnalysis = "  [X] Click to Do (AI Analysis)"
        AIPaintAI = "  [X] Paint AI (Cocreator, Gen Fill, Image Creator)"
        AINotepadAI = "  [X] Notepad AI (Copilot Button + AI Assistance)"
        AISettingsAgent = "  [X] Settings Agent (AI in Settings)"
        AICopilotProactive = "  [X] Copilot Proactive Features"
        AIFallback = "FALLBACK:"
        AIRecallMinimum = "  [!] Recall Storage set to minimum (10GB, 1 day)"
        AIStatus = "STATUS:"
        AISystemWideBlocked = "  [OK] All AI features system-wide blocked (HKLM)"
        AIAllUsers = "  [OK] Applies to ALL users"
        AIMultiLayerBlocking = "  [OK] Multi-layer blocking (multiple registry paths)"
        AINote = "NOTE:"
        AIMicrosoftChanges = "  Microsoft constantly changes AI implementation!"
        AIFutureProof = "  We block on multiple levels for future-proofing."
        
        # DNS Module
        DNSSECActivating = "Activating DNSSEC (DNS-Spoofing Protection)..."
        DNSSECModeOpportunistic = "DNSSEC Mode: Opportunistic (secure + compatible)"
        DNSSECActivated = "DNSSEC Validation activated"
        DNSSECResponsesValidated = "DNS responses are checked for authenticity (Anti-Spoofing)"
        DNSBlocklistInstalling = "Installing DNS Blocklist (80K+ Domains)..."
        DNSBlocklistOptimization = "OPTIMIZATION: 9 domains per line (DNS-Cache-optimized)"
        DNSBlocklistCompressed = "Steven Black's unified hosts - compressed for performance"
        DNSAntivirusCompatibility = "ANTIVIRUS COMPATIBILITY: hosts file with 80K+ entries"
        DNSBitdefenderWarning = "Bitdefender users: Protection | Vulnerability | Settings | 'Scan hosts file' DISABLE!"
        DNSInternetBlock = "Otherwise internet access may be blocked!"
        DNSAlreadyInstalled = "Steven Black's Hosts is already installed"
        DNSSkipDownload = "Skipping download (idempotent)"
        DNSBackupOriginal = "Original hosts file backed up: {0}"
        DNSBackupFailed = "Hosts file backup failed: {0}"
        DNSBackupExists = "Original backup already exists: {0}"
        DNSUsingLocal = "Using local hosts file from project directory..."
        DNSCriticalError = "CRITICAL ERROR: Local hosts file not found!"
        DNSExpected = "Expected: {0}"
        DNSCannotInstall = "DNS-Blocklist CANNOT be installed!"
        DNSInvalidHeader = "Local hosts file has invalid header!"
        DNSExpectedHeader = "Expected: '# Title: StevenBlack/hosts'"
        DNSValidated = "Local hosts file validated: {0} domains"
        DNSInstalling = "Installing hosts file (atomic replace)..."
        DNSFileTooSmall = "Copied file too small ({0} lines < 1000)!"
        DNSAtomicSuccess = "Atomic replace successful"
        DNSInstallFailed = "Hosts file installation failed: {0}"
        DNSFlushingCache = "Flushing DNS cache..."
        DNSCacheFlushed = "DNS cache successfully flushed"
        DNSFlushTimeout = "DNS cache flush timeout (10s) - skipping"
        DNSFlushError = "DNS cache flush error (not critical): {0}"
        DNSBlocklistInstalled = "Steven Black's Blocklist installed ({0} domains)"
        DNSBlockedTypes = "Blocked: Malware, Tracking, Ads, Coin-Miners, Phishing"
        DNSSource = "Source: Local file (NoID Privacy Project)"
        DNSLegitimateWarning = "Some legitimate websites may be affected!"
        DNSInstallationFailed = "Installation failed: {0}"
        DNSNotInstalled = "DNS-Blocklist was NOT installed!"
        FirewallConfiguring = "Setting firewall to maximum inbound security..."
        FirewallProfileError = "Could not configure firewall profile {0}: {1}"
        FirewallActivated = "Strict Inbound Firewall activated"
        FirewallInbound = "Inbound: ALL BLOCKED (including allowed apps!)"
        FirewallOutbound = "Outbound: ALL ALLOWED (Internet works normally)"
        FirewallMaxSecurity = "MAXIMUM SECURITY: NOTHING can get in from outside!"
        FirewallCheckbox = "Checkbox 'Block all incoming connections' is now ACTIVE!"
        
        # Common Module
        CommonCreatingKey = "Creating registry key: {0}"
        CommonRegistrySet = "Registry set: {0}\\{1} = {2}"
        CommonRegistryError = "Error changing registry: {0}\\{1} - {2}"
        CommonServiceNotFound = "Service '{0}' not found (normal for legacy services in Windows 11)"
        CommonDisablingService = "Disabling service: {0} (Status: {1})"
        CommonSetServiceFailed = "Set-Service failed (legacy service not configurable)"
        CommonServiceStopped = "Service stopped after {0}s"
        CommonServiceAlreadyStopped = "Service was already stopped"
        CommonServiceNotInstalled = "Service {0} not found (OK - not installed)"
        CommonServiceTimeout = "Service {0} is not stopping - Timeout after {1}s"
        CommonServiceDisabledWillNotStart = "[OK] {0} - Disabled (Status={1} - will not start on next reboot)"
        CommonServiceCouldNotDisable = "Service {0} could not be disabled (StartMode={1})"
        CommonServiceDisableError = "Error disabling service {0}: {1}"
        CommonCIMCheckFailed = "CIM check failed, using fallback: {0}"
        CommonServiceDisabledAssumed = "[OK] {0} - Disabled (assumed - Set-Service was successful)"
        
        # Bloatware Module
        BloatwareRemoving = "Removing bloatware..."
        BloatwareScanning = "Scanning for bloatware..."
        BloatwareCheckingPatterns = "Checking {0} app patterns..."
        BloatwareLoadingPackages = "Loading Provisioned Packages (once, ~5 seconds)..."
        BloatwarePackagesLoaded = "{0} Provisioned Packages loaded"
        BloatwareLoadFailed = "Get-AppxProvisionedPackage failed: {0}"
        BloatwarePackagesSkipped = "Provisioned Packages could not be loaded - skipping"
        BloatwareProgress = "Progress: {0}/{1} apps checked..."
        BloatwareCompleted = "Completed: {0}/{1} apps checked"
        BloatwareRemovalDone = "Bloatware removal completed"
        BloatwareRemoved = "Removed: {0} apps"
        BloatwareFailed = "Failed: {0} apps (possibly not installed)"
        BloatwareStoreNote = "NOTE: Removed apps can be reinstalled via Microsoft Store"
        BloatwareProvisionedNote = "IMPORTANT: Provisioned packages removed - new user profiles won't have these apps!"
        ConsumerFeaturesDisabling = "Disabling consumer features and promoted apps..."
        ConsumerFeaturesDisabled = "Consumer features and promoted/stub apps disabled"
        ConsumerFeaturesLinkedIn = "[OK] LinkedIn and other stub apps will be removed from Start Menu"
        ConsumerFeaturesNoAutoInstall = "[OK] No automatic app installation"
        ConsumerFeaturesRestartNote = "[!] NOTE: Restart required to update Start Menu!"
        ConsumerFeaturesNoMoreAuto = "Windows will NO LONGER automatically install apps"
        SpecificAppsRemoving = "Removing specific apps..."
        SpecificAppsCortanaRemoving = "Removing Cortana app..."
        SpecificAppsCortanaRemoved = "Cortana app removed"
        SpecificAppsTeamsDisabling = "Disabling Teams Chat icon..."
        SpecificAppsTeamsDisabled = "Teams Chat icon disabled"
        SpecificAppsCopilotDisabling = "Disabling Windows Copilot..."
        SpecificAppsCopilotDisabled = "Windows Copilot disabled"
        SpecificAppsWidgetsDisabling = "Disabling Widgets..."
        SpecificAppsWidgetsDisabled = "Widgets disabled"
        
        # ASR Module
        ASRMode = "ASR Mode: {0}"
        ASRAuditWarning = "AUDIT mode active! Does NOT block, only logging!"
        ASREvaluateLogs = "Evaluate the logs and then switch to Enforce mode"
        ASRCheckingDefender = "Checking if Windows Defender is available..."
        ASRDefenderAvailable = "Defender is available"
        ASRDefenderNotAvailable = "Windows Defender is NOT available (third-party AV active)"
        ASRConfigSkipped = "ASR configuration skipped - Your AV already provides protection"
        ASRCheckingService = "Checking Defender service status before ASR configuration..."
        ASRStartingService = "Starting Defender service (required for ASR)..."
        ASRWaitingInit = "Waiting 3 seconds for Defender initialization..."
        ASRServiceStarted = "Defender service started and initialized"
        ASRWaitingStability = "Waiting 1 second for Defender stability..."
        ASRServiceNotAvailable = "Defender service not available - ASR configuration skipped"
        ASRServiceSolution = "Solution: Start-Service -Name WinDefend or skip ASR module in Custom Mode"
        ASRExistingRules = "Existing ASR rules found ({0} rules)"
        ASRWillOverwrite = "These will be overwritten by new configuration"
        ASRConfigured = "ASR rules configured: {0} rules"
        ASRModeSet = "Mode: {0}"
        ASRCannotSetScript = "ASR rules could not be set via script"
        ASRPropertyNotFound = "The property 'AttackSurfaceReductionRules_Ids' was not found"
        ASRManualActivation = "MANUAL ACTIVATION: Windows Security | Virus and threat protection | Manage settings | Attack surface reduction rules"
        ASRReasonThirdParty = "Reason: Possibly third-party AV active or Defender not fully available"
        ASRAuditModeActive = "ASR in AUDIT mode! Check events in Defender logs."
        ASRSwitchToEnforce = "After evaluation, switch to Enforce!"
        ASRExclusionsNote = "ASR Exclusions can be set via Add-MpPreference -AttackSurfaceReductionOnlyExclusions"
        ASRPreferencesError = "Defender Preferences could not be read"
        ASRNoRulesConfigured = "No ASR rules configured"
        ASRConfiguredRules = "Configured ASR rules: {0}"
        USBConfiguring = "Configuring USB Device Control..."
        USBActivated = "USB Device Control activated (No Execute)"
        USBNote = "USB sticks: Read + Write OK, but .exe/.bat/.ps1 will NOT execute"
        USBProtection = "PROTECTION: BadUSB malware CANNOT be executed!"
        SACConfiguring = "Configuring Smart App Control..."
        SACStatus = "Smart App Control Status: {0}"
        SACNotConfigured = "Smart App Control Status: Not configured (Windows decides)"
        SACWindowsManages = "Smart App Control: Windows manages status automatically"
        SACEvaluationPeriod = "After 7-14 days evaluation, Windows can activate SAC"
        SACSmartScreenActive = "SmartScreen active"
        
        # Core Module - System Validation
        CoreSystemValidation = "System Validation"
        CoreBuildRequired = "Windows 11 25H2 (Build 26100+) required! Current: {0}"
        CoreBaselineOptimized = "The baseline is specifically optimized for Windows 11 25H2!"
        CoreOSInfoError = "Error retrieving OS information: {0}"
        CoreTPMAvailable = "TPM 2.0 available and ready"
        CoreTPMNotActivated = "TPM 2.0 not fully activated (Present: {0}, Ready: {1})"
        CoreTPMStatusError = "TPM status could not be retrieved: {0}"
        CoreVBSActivated = "VBS (Virtualization-Based Security) activated"
        CoreVBSStatusUnknown = "VBS status could not be determined"
        CoreValidationComplete = "System validation completed"
        
        # Core Module - NetBIOS
        CoreNetBIOSDisable = "Disable NetBIOS Name Resolution"
        CoreNetBIOSDisabled = "NetBIOS disabled on all {0} adapters"
        CoreNetworkAdapterError = "Error retrieving network adapters: {0}"
        
        # Core Module - Process Auditing
        CoreProcessAuditing = "Process Auditing with Command Line"
        CoreAuditpolNotFound = "auditpol.exe not found: {0}"
        CoreAuditpolSkipped = "Process Creation Auditing via auditpol.exe skipped"
        CoreAuditActivated = "Audit Process Creation activated (EID 4688)"
        CoreAuditpolFailed = "auditpol.exe failed: Exit Code {0} - Output: {1}"
        CoreLocaleMismatch = "Known issue: Error 0x00000057 on locale mismatch (harmless)"
        CoreRegistryActive = "Command Line Logging via Registry is already active"
        CoreAuditpolExecError = "Error executing auditpol.exe: {0}"
        CoreSecretSpillWarning = "WARNING: Evaluate secret-spill risk in logs!"
        CoreCommandLinesSecrets = "Command lines may contain passwords, API keys, tokens!"
        
        # Core Module - IE11
        CoreIE11Disable = "Disable IE11 COM Automation"
        CoreIE11Disabled = "IE11/MSHTML/ActiveX disabled"
        
        # Core Module - Print Spooler
        CorePrintSpooler = "Print Spooler User Rights"
        CorePrintImpersonate = "Setting 'Impersonate client' for PrintSpoolerService..."
        CoreTempNotSet = "TEMP environment variable not set!"
        CoreSeceditNotFound = "secedit.exe not found: {0}"
        CorePrintAdded = "PrintSpoolerService added to 'Impersonate client' (WPP)"
        CoreSeceditFailed = "secedit.exe failed: Exit Code {0}"
        CoreUserRightsError = "Error in User Rights Assignment: {0}"
        CorePrintRPCHarden = "Hardening Print Spooler RPC (PrintNightmare mitigation)..."
        CorePrintNightmare = "Print Spooler RPC hardening (PrintNightmare CVE-2021-1675 Mitigation)"
        
        # Core Module - Defender Baseline
        CoreDefenderBaseline = "Microsoft Defender Baseline"
        CoreDefenderNotAvailable = "Windows Defender is NOT available!"
        CoreDefenderThirdParty = "REASON: Third-party antivirus detected (BitDefender, Norton, Kaspersky, etc.)"
        CoreDefenderAutoDisabled = "Windows Defender is automatically disabled when third-party AV is active."
        CoreDefenderSkipped = "DEFENDER CONFIGURATION IS BEING SKIPPED!"
        CoreDefenderThirdPartyProtection = "Your third-party antivirus provides protection."
        CoreDefenderStarting = "Defender Service is being started (required for configuration)..."
        CoreDefenderStartFailed = "Defender Service could not be started: {0}"
        CoreDefenderConfigSkipped = "Defender configuration skipped (third-party AV active?)"
        CorePUARegistry = "PUA is being activated via Registry checkboxes (works without service)"
        CorePUACheckboxes = "Setting PUA checkboxes (with TrustedInstaller ownership management)..."
        CorePUAActivated = "PUA checkbox activated: Block apps (Block downloads is configured in Edge module)"
        CorePUAScriptFailed = "PUA checkboxes could not be set via script (TrustedInstaller-Protected)"
        CorePUAFunctional = "Set-MpPreference is already active - PUA functionality is provided"
        CorePUAManual = "OPTIONAL: Manually activate checkboxes in: Windows Security | Virus and threat protection |"
        CorePUAManualPath = "          Virus and threat protection settings | Potentially unwanted app blocking"
        CoreDefender6Settings = "Activating 6 Defender settings (Baseline 25H2)..."
        CoreDefender6Activated = "6 Defender settings activated (Microsoft Baseline 25H2)"
        CoreDefenderActive = "Defender Baseline settings active"
        
        # Core Module - Controlled Folder Access
        CoreCFATitle = "Controlled Folder Access (Ransomware Protection)"
        CoreCFAThirdParty = "Windows Defender is NOT available (third-party AV active)"
        CoreCFASkipped = "Controlled Folder Access skipped - Your AV provides protection"
        CoreCFAStarting = "Defender Service is being started..."
        CoreCFAServiceFailed = "Defender Service not available - Controlled Folder Access skipped"
        CoreCFAActivated = "Controlled Folder Access activated"
        CoreCFAProtected = "Protected: Documents, Pictures, Videos, Desktop"
        CoreCFAWhitelist = "IMPORTANT: Legitimate applications may need to be added to whitelist"
        CoreCFANotActivated = "Controlled Folder Access Status: Not activated"
        CoreCFAVerifyFailed = "Controlled Folder Access status could not be verified"
        CoreCFADefenderUnavailable = "Possibly third-party AV active or Defender not fully available"
        CoreCFARegistry = "Controlled Folder Access activated (Registry)"
        CoreCFAEnableFailed = "Controlled Folder Access could not be activated: {0}"
        CoreCFAManual = "Manually activate: Windows Security | Ransomware Protection"
        
        # Core Module - Exploit Protection
        CoreExploitTitle = "Exploit Protection EXTENDED (Maximum Security)"
        CoreExploitConfiguring = "Configuring ALL Exploit Mitigations..."
        CoreExploitActivated = "Exploit Protection EXTENDED activated!"
        CoreExploitDEP = "  - DEP (Data Execution Prevention)"
        CoreExploitSEHOP = "  - SEHOP (Structured Exception Handler Overwrite Protection)"
        CoreExploitASLR = "  - ASLR (Mandatory + Bottom-up + High Entropy 64-bit)"
        CoreExploitCFG = "  - CFG Strict Mode + Export Suppression (Anti-ROP)"
        CoreExploitHeap = "  - Heap Protection (Terminate on Corruption)"
        CoreExploitImageLoad = "  - Image Load Protection (Block Remote + Low Integrity)"
        CoreExploitExtension = "  - Extension Points Disabled (Legacy COM)"
        CoreExploitResistance = "EXTENDED MITIGATIONS: +8% Exploit Resistance vs. Standard"
        CoreExploitFailed = "Exploit Protection could not be fully configured: {0}"
        CoreExploitManual = "Manually check: Windows Security | App and browser control | Exploit protection"
        
        # Core Module - Services
        CoreServicesTitle = "Disable Unnecessary Services (Maximum Hardening)"
        CoreServicesWLANActive = "WLAN stays ACTIVE (WlanSvc) - but Network Discovery will be disabled!"
        CoreServicesDisabling = "Disabling {0} Services..."
        CoreServicesDisabled = "{0} disabled"
        CoreServicesProtected = "{0} could not be disabled (possibly protected)"
        CoreServicesNotFound = "{0} not found (already removed or not installed)"
        CoreServicesResult = "{0} Services disabled, {1} not found"
        
        # Core Module - Administrative Shares
        CoreAdminSharesTitle = "Disable Administrative Shares (C$, ADMIN$, IPC$)"
        CoreAdminSharesDisabling = "Administrative Shares are being PERMANENTLY disabled..."
        CoreAdminSharesDisabled = "Administrative Shares disabled (C$, ADMIN$, etc.)"
        CoreAdminSharesIPCWarning = "IPC$ Share CANNOT be disabled (required for Named Pipes)"
        CoreAdminSharesRebootNote = "NOTE: Reboot required for full effect of Share deactivation"
        CoreAdminSharesIPCHardening = "IPC$ is being hardened (Restrict Anonymous Access)..."
        CoreAdminSharesIPCHardened = "IPC$ hardened (Anonymous Access heavily restricted)"
        CoreAdminSharesIPCNote = "IPC$ remains active (required for Windows-internal), but without Anonymous Access!"
        
        # Core Module - Administrator Account
        CoreAdminAccountTitle = "Harden Built-in Administrator Account"
        CoreAdminAccountRenaming = "Administrator Account is being renamed and disabled..."
        CoreAdminAccountNotFound = "Built-in Administrator Account not found"
        CoreAdminAccountRenamed = "Administrator renamed: '{0}' to '{1}'"
        CoreAdminAccountRenameError = "Error renaming: {0}"
        CoreAdminAccountPasswordGenerating = "Generating cryptographically secure 64-character password..."
        CoreAdminAccountPasswordSet = "Administrator Password set to 64-Character-Cryptographically-Secure"
        CoreAdminAccountPasswordError = "Error setting password: {0}"
        CoreAdminAccountDisabled = "Administrator Account DISABLED (CIS Best Practice)"
        CoreAdminAccountDisableError = "Error disabling: {0}"
        CoreAdminAccountWarning1 = "==========================================================="
        CoreAdminAccountWarning2 = "IMPORTANT: The password was NOT saved!"
        CoreAdminAccountWarning3 = "This is a Security Best Practice - NEVER plaintext!"
        CoreAdminAccountSolutions = "RECOMMENDED SOLUTIONS for Administrator access:"
        CoreAdminAccountLAPS = "  1. LAPS (Local Administrator Password Solution)"
        CoreAdminAccountEntra = "  2. Microsoft Entra ID (Azure AD) Join"
        CoreAdminAccountJIT = "  3. Separate Admin-Accounts with Just-In-Time Access"
        CoreAdminAccountWarning4 = "The Built-in Administrator is now DISABLED and has"
        CoreAdminAccountWarning5 = "an unknown 64-character password (RandomNumberGenerator)."
        CoreAdminAccountGuestHardening = "Harden Guest Account..."
        CoreAdminAccountGuestDisabled = "Guest Account was disabled"
        CoreAdminAccountGuestRenamed = "Guest Account renamed: '{0}' to '{1}' + disabled"
        CoreAdminAccountGuestNotFound = "Guest Account not found (already removed or not present)"
        CoreAdminAccountGuestError = "Guest Account renaming failed (not critical): {0}"
        CoreAdminAccountGuestNote = "Note: Guest Account is already disabled (Windows default)"
        CoreAdminAccountError = "Error hardening Administrator Account: {0}"
        
        # Core Module - DNS over HTTPS
        CoreDNSTitle = "Configure Cloudflare DNS over HTTPS (DoH)"
        CoreDNSWarning = "ATTENTION: DNS will be set to Cloudflare 1.1.1.1!"
        CoreDNSCorporate = "Corporate Networks: Use your internal DNS servers instead"
        CoreDNSAlternatives = "Alternative DNS: Quad9 (9.9.9.9), Google (8.8.8.8)"
        CoreDNSSwitching = "DNS is being switched to Cloudflare 1.1.1.1 with DoH..."
        CoreDNSStep1 = "Step 1: Register DoH servers (Cloudflare IPv4 + IPv6)..."
        CoreDNSRegistered = "DoH servers registered: 4 Cloudflare servers (IPv4 + IPv6)"
        CoreDNSStep2 = "Step 2: Activate DoH globally..."
        CoreDNSGlobalActivated = "DoH globally activated"
        CoreDNSGlobalError = "DoH global could not be activated: {0}"
        CoreDNSAdapters = "DNS is being set on network adapters to Cloudflare (VPN adapters will be skipped)..."
        CoreDNSVPNSkipped = "VPN adapter skipped: '{0}' ({1})"
        CoreDNSVPNKeepDNS = "Skipped VPN adapters: {0}"
        CoreDNSVPNNote = "VPN adapters keep their own DNS servers (important for VPN functionality!)"
        CoreDNSNoAdapters = "No network adapters found (all are VPN or Down)"
        CoreDNSSkipped = "DNS configuration will be skipped!"
        CoreDNSConfiguring = "Configuring DNS on {0} adapter(s) (without VPN)"
        CoreDNSStep3 = "Step 3: Configure DNS on adapter '{0}'..."
        CoreDNSIPv6Wait = "Waiting 5 seconds for IPv6 DoH validation..."
        CoreDNSAdapterIPv6 = "DNS on adapter '{0}': IPv4 + IPv6 with DoH configured"
        CoreDNSAdapterIPv4 = "DNS on adapter '{0}': IPv4 with DoH configured"
        CoreDNSAdapterError = "Error setting DNS on adapter '{0}': {1}"
        CoreDNSAdapterResult = "{0} adapter(s) configured"
        CoreDNSNetworkError = "Error retrieving network adapters: {0}"
        CoreDNSCacheFlushing = "DNS cache is being flushed..."
        CoreDNSCacheFlushed = "DNS cache flushed"
        CoreDNSCacheTimeout = "DNS Cache Flush Timeout (10s) - will be skipped"
        CoreDNSCacheReboot = "DNS cache will be automatically flushed at next reboot"
        CoreDNSActivation = "DoH will be activated at next reboot/DNS request"
        CoreDNSValidating = "Validating DoH configuration..."
        CoreDNSValidated = "DoH validation: {0} Cloudflare DoH servers configured"
        CoreDNSValidationFailed = "VALIDATION FAILED: No Cloudflare DoH servers found!"
        CoreDNSUnencrypted = "DNS could be UNENCRYPTED!"
        CoreDNSValidationNoData = "VALIDATION FAILED: Get-DnsClientDohServerAddress returned no data!"
        CoreDNSValidationReasons = "Possible causes:"
        CoreDNSValidationOldWindows = "  - DoH cmdlets not available (Windows too old?)"
        CoreDNSValidationNotActive = "  - DoH not yet active (reboot required?)"
        CoreDNSActivated = "Cloudflare DNS over HTTPS activated"
        CoreDNSIPv4Info = "IPv4: 1.1.1.1 (Primary), 1.0.0.1 (Secondary)"
        CoreDNSIPv6Info = "IPv6: 2606:4700:4700::1111 (Primary), 2606:4700:4700::1001 (Secondary)"
        CoreDNSRebootWarning = "IMPORTANT: Reboot may be required for DoH to become active!"
        CoreDNSTest = "Test: nslookup cloudflare.com"
        CoreDNSVPNNotModified = "NOTE: VPN adapters were NOT changed!"
        CoreDNSVPNKeep = "  VPN connections continue to use their own DNS servers"
        CoreDNSVPNCorrect = "  This is CORRECT and IMPORTANT for VPN functionality!"
        
        # Core Module - Remote Access
        CoreRemoteTitle = "Completely Disable Remote Access (Hard Mode)"
        CoreRemoteRDPDisabling = "RDP is being PERMANENTLY DISABLED..."
        CoreRemoteRDPDisabled = "RDP Services permanently disabled (TermService, UmRdpService)"
        CoreRemoteRDPPartial = "Only {0} of {1} RDP Services disabled"
        CoreRemoteRDPFailed = "RDP Services could not be disabled"
        CoreRemoteRDPFirewall = "RDP Firewall rules HARD disabled + Block rule active"
        CoreRemoteRDPFirewallError = "RDP Firewall rules error: {0}"
        CoreRemoteRegDisabling = "Remote Registry is being disabled..."
        CoreRemoteRegDisabled = "Remote Registry Service disabled"
        CoreRemoteRegFailed = "Remote Registry could not be disabled"
        CoreRemoteRADisabling = "Remote Assistance is being disabled..."
        CoreRemoteRADisabled = "Remote Assistance disabled (all variants)"
        CoreRemoteWinRMDisabling = "WinRM (PowerShell Remoting) is being disabled..."
        CoreRemoteWinRMDisabled = "WinRM Service disabled (PowerShell Remoting OFF)"
        CoreRemoteWinRMFailed = "WinRM could not be disabled"
        CoreRemoteWinRMFirewall = "WinRM Firewall rules disabled"
        CoreRemoteWinRMFirewallError = "WinRM Firewall rules error: {0}"
        CoreRemoteComplete = "Remote Access 100% DISABLED (RDP=OFF + RemoteReg=OFF + RA=OFF + WinRM=OFF)"
        CoreRemoteWarning = "NO Remote access possible! Only physical access or Intune/SCCM!"
        
        # Core Module - Sudo
        CoreSudoTitle = "Disable Sudo for Windows"
        CoreSudoDisabled = "Sudo for Windows disabled (Microsoft Baseline 25H2)"
        CoreSudoNote = "Sudo is a potential Privilege Escalation Vector"
        
        # Core Module - Kerberos
        CoreKerberosTitle = "Kerberos PKINIT Hash Agility (SHA-2 Only)"
        CoreKerberosConfigured = "Kerberos PKINIT Hash Agility: SHA-256/384/512 (SHA-1 DISABLED)"
        CoreKerberosBaseline = "Microsoft Baseline 25H2: SHA-1 is NOT supported"
        CoreKerberosKDC = "Note: Windows Server 2025 KDC recommended for full functionality"
        
        # Core Module - Mark-of-the-Web
        CoreMOTWTitle = "Mark-of-the-Web"
        CoreMOTWActivated = "Mark-of-the-Web active"
        
        # Advanced Module
        AdvancedLAPSNotAvailable = "Windows LAPS not available on this edition/version"
        AdvancedLAPSSkipped = "LAPS skipped (Pro/Enterprise/Education only)"
        AdvancedLAPSHint = "Hint: Use Microsoft LAPS for Home/Pro or Legacy LAPS"
        AdvancedLAPSConfigured = "Windows LAPS configured (30-day rotation, 20 characters, Entra/AD-Escrow)"
        AdvancedLAPSModule = "LAPS PowerShell Module: Install-Module -Name LAPS"
        AdvancedAuditSetting = "Setting advanced audit policies..."
        AdvancedAuditPoliciesFailed = "Audit Policies could not be set - possibly locale problem"
        AdvancedAuditPoliciesGPO = "Audit Policies will be set via GPO or registry alternative"
        AdvancedAuditTranscriptError = "Could not create PSTranscripts directory: {0}"
        AdvancedAuditActivated = "Advanced Auditing activated (Object Access, Logon, DS, Policy, PnP, PS-Logging)"
        AdvancedAuditLogSizes = "Event Log sizes: Security=500MB, System/App=100MB, PS=50MB"
        AdvancedNTLMActivating = "NTLM Auditing is being activated (Microsoft Baseline 25H2)..."
        AdvancedNTLMActivated = "NTLM Auditing activated (Audit-Only, no blocking)"
        AdvancedNTLMEventIDs = "Event IDs: 4624 (NTLM Logon), 8004 (NTLM Auth), 8002 (NTLM Blocked)"
        AdvancedNTLMGoal = "Goal: Detect legacy NTLM usage for migration to Kerberos"
        AdvancedNTLMNotBlocked = "NTLM is NOT blocked - only logged! (Best practice for compatibility)"
        AdvancedTLSSHA1Warning = "SHA-1 is being disabled for TLS/SSL (SCHANNEL) - legacy websites may be affected"
        AdvancedTLSCodeSigningOK = "Code signing with SHA-1 remains ALLOWED (legacy software compatibility)"
        AdvancedTLSSHA1Scope = "SHA-1 Scope: ONLY TLS/SSL blocked - code signing/VPN/legacy apps work!"
        AdvancedTLSLegacyWebsites = "For legacy website issues: Re-enable SHA-1 manually"
        AdvancedTLSCompleted = "TLS/SSL hardening completed (TLS 1.2+1.3, GCM/CHACHA only, SHA-2, no CBC/RC4/3DES/MD5)"
        AdvancedTLSEventLogging = "Schannel Event Logging activated (Level 7)"
        AdvancedPrintAdding = "Adding RESTRICTED SERVICES\\PrintSpoolerService to User Rights..."
        AdvancedPrintExportFailed = "Security Policy Export failed"
        AdvancedPrintNotCritical = "NOT CRITICAL: Windows Protected Print works anyway"
        AdvancedPrintNotFound = "SeImpersonatePrivilege not found in Security Policy"
        AdvancedPrintDefaultsKept = "NOT CRITICAL: Defaults remain"
        AdvancedPrintAlreadyPresent = "Print Spooler Service User Right already present"
        AdvancedPrintAdded = "Print Spooler User Right added"
        AdvancedPrintUserRight = "  - User Right: SeImpersonatePrivilege"
        AdvancedPrintSIDAdded = "  - SID Added: S-1-5-99-0-0-0-0 (RESTRICTED SERVICES\\PrintSpoolerService)"
        AdvancedPrintPurpose = "  - Purpose: Windows Protected Print Support (Forward-Compat)"
        AdvancedPrintBaseline = "MICROSOFT BASELINE 25H2: 100% FULFILLED!"
        AdvancedPrintImportFailed = "Security Policy Import failed (Exit Code: {0})"
        AdvancedPrintPrintingWorks = "NOT CRITICAL: Printing works anyway"
        AdvancedPrintAssignmentFailed = "User Right Assignment failed: {0}"
        AdvancedPrintStandardPerms = "NOT CRITICAL: Windows Protected Print works with standard permissions"
        
        # Edge Module
        EdgeBaselineTitle = "Microsoft Edge Security Baseline v139+ (User-Friendly)"
        EdgeSmartScreenConfig = "Configuring SmartScreen and Site Isolation..."
        EdgeTrackingConfig = "Configuring Tracking Prevention (Strict)..."
        EdgeDNSConfig = "Configuring DNS over HTTPS..."
        EdgeEnhancedSecurityConfig = "Configuring Enhanced Security Mode (Balanced)..."
        EdgeExtensionsConfig = "Configuring Extension policies (User-Friendly)..."
        EdgeExtensionsAllowed = "Extensions from Microsoft Edge Store are ALLOWED"
        EdgeTLSConfig = "Configuring TLS/SSL Security..."
        EdgeTLSDefault = "TLS 1.2+ is enabled by default (Edge v98+)"
        EdgeAutoFillConfig = "Configuring AutoFill and Password Manager (Default: Enabled)..."
        EdgeAutoFillDefault = "AutoFill and Password Manager are DEFAULT enabled (User CAN change!)"
        EdgeWebRTCConfig = "Configuring WebRTC IP-Leak Prevention..."
        EdgeInPrivateConfig = "Configuring InPrivate Mode..."
        EdgeBaselineApplied = "Microsoft Edge Security Baseline v139+ applied (HYBRID Mode)"
        EdgeConfiguration = "CONFIGURATION (Hybrid: Policies + Preferences):"
        EdgePoliciesGreyed = "  POLICIES (GREYED OUT - User CANNOT change):"
        EdgeSmartScreenActive = "  [OK] SmartScreen: Active (not bypassable)"
        EdgeTrackingBalanced = "  [OK] Tracking Prevention: Balanced"
        EdgeDNSAutomatic = "  [OK] DNS over HTTPS: Automatic"
        EdgeSecurityBasic = "  [OK] Enhanced Security: Basic"
        EdgeTLSStandard = "  [OK] TLS: 1.2+ Standard (Edge v98+)"
        EdgeSiteIsolation = "  [OK] Site Isolation: Enabled"
        EdgeExtensionsMSOnly = "  [OK] Extensions: Only Microsoft Store"
        EdgePreferencesChangeable = "  PREFERENCES (DEFAULT - User CAN change!):"
        EdgeAutoFillAddress = "  [~] AutoFill Address: Default ON"
        EdgeAutoFillCard = "  [~] AutoFill Credit Card: Default ON"
        EdgePasswordManager = "  [~] Password Manager: Default ON"
        EdgePaymentMethods = "  [~] Payment Methods: Default ON"
        EdgeInPrivateAvailable = "  [~] InPrivate Mode: Default AVAILABLE"
        EdgeQUIC = "  [~] QUIC/HTTP3: Default ON"
        EdgeWebRTCDefault = "  [~] WebRTC IP-Leak Prevention: Default ON"
        EdgeHybridMode = "  HYBRID MODE = Best of Both Worlds:"
        EdgeSecurityEnforced = "  [OK] Security-critical settings: ENFORCED (Policies)"
        EdgeUserFriendly = "  [OK] User-friendly settings: DEFAULT but CHANGEABLE (Preferences)"
        EdgeRestartRequired = "Restart Edge for full effect"
        EdgeExtensionSourcesSet = "ExtensionInstallSources set as MultiString"
        
        # WirelessDisplay Module
        WDDisableTitle = "Wireless Display / Miracast - COMPLETE Disablement (4 Levels)"
        WDDisableAllLevels = "Disabling on ALL levels: Services, Registry, Firewall, Apps..."
        WDLevel1Services = "Level 1/4: Disabling services..."
        WDLevel2Registry = "Level 2/4: Hardening registry..."
        WDLevel3Firewall = "Level 3/4: Blocking firewall rules..."
        WDLevel4Apps = "Level 4/4: Removing Wireless Display apps..."
        WDCompletelyDisabled = "Wireless Display COMPLETELY disabled on ALL 4 levels:"
        WDLevel1Done = "  [OK] Level 1: Services stopped"
        WDLevel2Done = "  [OK] Level 2: Registry hardened"
        WDLevel3Done = "  [OK] Level 3: Firewall blocked"
        WDLevel4Done = "  [OK] Level 4: Apps removed"
        WDMiracastNotWorking = "Miracast / Cast to Smart TV will NOT work anymore!"
        WDQuickSettingsNote = "NOTE: 'Cast' button remains in Quick Settings (manually remove: Win+A | Edit)"
        WDClickHarmless = "Clicking button is harmless - services disabled, feature doesn't work"
        
        # WindowsUpdate Module
        WUDefaultsTitle = "Windows Update - Recommended Defaults (HYBRID)"
        WUDefaultsSet = "Windows Update Defaults set (HYBRID)"
        WUConfiguration = "Configuration:"
        WUOtherMSProducts = "  [+] Updates for other MS products: ON (User can change)"
        WUGetLatestUpdates = "  [+] Get latest updates as soon as available: ON (User can change)"
        WUMeteredConnections = "  [+] Updates over metered connections: ON (Security First!)"
        WURestartNotifications = "  [+] Restart notifications: ON (User can change)"
        WULatestUpdatesImmediately = "  [+] Latest updates immediately: ON (User can change)"
        WUPreviewBuilds = "  [!] Preview Builds: OFF (Policy = GUARANTEED!)"
        WUHybridMode = "HYBRID MODE:"
        WUUserPreferences = "  [OK] User preferences = Toggles work!"
        WUPoliciesCritical = "  [OK] Policies for critical settings (Preview Builds)"
        WUBestOfBoth = "  [OK] Best of Both Worlds!"
        DOHTTPOnlyTitle = "Delivery Optimization - HTTP-Only (HYBRID)"
        DOHTTPOnlySet = "Delivery Optimization: HTTP-Only Mode (HYBRID)"
        DOGuaranteed = "GUARANTEED: Updates come ONLY from Microsoft servers (HTTP)"
        DONoPeerToPeer = "NO P2P sharing, NO LAN scanning"
        DOHybridMode = "HYBRID MODE:"
        DOPolicySet = "  [OK] Policy set = GUARANTEED that setting applies"
        DOConfigSet = "  [OK] Config set = Toggle support"
        DOUserCanChange = "User can change by:"
        DOChangeToggle = "  1. Change toggle in Settings (removes Policy automatically)"
        DODeletePolicy = "  2. Or manually delete Policy via Registry:"
        DODeleteCommand = "     Remove-ItemProperty -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DeliveryOptimization -Name DODownloadMode"
        
        # UAC Module
        UACMaximumSecurityTitle = "UAC Maximum Security (Always notify)"
        UACMaximumSet = "UAC set to MAXIMUM (Always notify)"
        UACSliderPosition = "Slider Position: Top (Position 1 of 4)"
        UACEveryActionRequires = "Every Admin action requires confirmation on Secure Desktop!"
        UACMostSecureSetting = "This is the most secure setting - but can be annoying with many admin tasks!"
        UACEPPUpcomingFeature = "NOTE: Enhanced Privilege Protection is an UPCOMING feature!"
        UACEPPAnnouncedBaseline = "Microsoft announced these settings in Baseline 25H2,"
        UACEPPNotYetActive = "but the feature is NOT YET active in Windows 11 25H2."
        UACEPPSettingAnyway = "We set the Registry keys ANYWAY (for future Windows updates)..."
        UACEPPSettingsSet = "Enhanced Privilege Protection Mode Settings set"
        UACEPPNotActiveYet = "IMPORTANT: Feature is NOT YET active - will be activated in future updates!"
        UACEPPFutureProof = "These settings are 'Future-Proof' - ready for upcoming Windows updates"
        
        # OneDrive Module
        OneDriveHardeningStart = "Hardening OneDrive for Maximum Privacy..."
        OneDriveFunctionalityPreserved = "Functionality preserved - User has CONTROL over uploads"
        OneDriveTutorialDisabled = "Disable OneDrive Tutorial (Privacy)"
        OneDriveTutorialDisabledDefault = "Disable OneDrive Tutorial (Privacy) - Default for new users"
        OneDriveFeedbackDisabled = "Disable OneDrive Feedback to Microsoft (Privacy)"
        OneDriveFeedbackDisabledDefault = "Disable OneDrive Feedback to Microsoft (Privacy) - Default for new users"
        OneDriveNoConnectWithoutConsent = "OneDrive cannot connect without User consent (Privacy)"
        OneDriveNoConnectWithoutConsentDefault = "OneDrive cannot connect without User consent (Privacy) - Default for new users"
        OneDriveBlockAutoUpload = "Block Auto-Upload of Desktop/Documents/Pictures (Privacy)"
        OneDriveBlockAutoUploadDefault = "Block Auto-Upload of Desktop/Documents/Pictures (Privacy) - Default for new users"
        OneDriveHardeningDone = "OneDrive Privacy Hardening: DONE"
        OneDrivePrivacyStatus = "OneDrive Privacy Status:"
        OneDriveTutorialStatus = "  [OK] Tutorial disabled (no tracking on first start)"
        OneDriveFeedbackStatus = "  [OK] Feedback disabled (no data leaks via bug reports)"
        OneDriveNetworkStatus = "  [OK] No network traffic before User login (no silent tracking)"
        OneDriveKFMStatus = "  [OK] Known Folder Move blocked (no auto-upload)"
        OneDriveDiagnosticStatus = "  [OK] Optional Diagnostic Data disabled (via Telemetry module)"
        OneDriveFunctionality = "OneDrive Functionality:"
        OneDriveWorksNormally = "  [OK] OneDrive works normally (Sync/Upload/Download)"
        OneDrivePersonalActive = "  [OK] Personal OneDrive active (no breaking for Home users)"
        OneDriveKFMOff = "  [!] Auto-Backup (KFM) is OFF - User must upload files manually"
        OneDriveUserControl = "  [!] User has CONTROL over what gets uploaded to cloud (Privacy-First!)"
        
        # Backup Script
        BackupBanner = "BACKUP - Windows 11 Security Baseline Settings"
        BackupCreating = "Creating complete backup..."
        BackupDirCreated = "Backup directory created:"
        BackupCheckOld = "Checking old backups..."
        BackupDeleteOld = "Deleting {0} old backups (older than last 30)..."
        BackupDeleted = "old backups deleted"
        BackupNoOld = "No old backups to delete (max. 30 kept)"
        BackupDNS = "DNS Settings being backed up..."
        BackupDNSAdapter = "DNS from adapter '{0}':"
        BackupDNSSaved = "DNS Settings backed up ({0} adapters)"
        BackupHosts = "Hosts file being backed up..."
        BackupHostsSaved = "Hosts file backed up ({0} lines)"
        BackupApps = "Installed apps being backed up..."
        BackupAppsUser = "User apps backed up"
        BackupAppsProvisioned = "Backing up Provisioned Packages (for restore)..."
        BackupAppsProvisionedSaved = "Provisioned Packages backed up"
        BackupServices = "Service start types being backed up..."
        BackupServicesSaved = "Services backed up (ALL!)"
        BackupServicesNote = "This allows 100% restore"
        BackupFirewall = "Firewall rules being backed up..."
        BackupFirewallSaved = "Firewall rules backed up (ALL!)"
        BackupFirewallNote = "Incl. status of all standard rules (enabled/disabled)"
        BackupUsers = "User accounts being backed up..."
        BackupUsersSaved = "User accounts backed up"
        BackupUsersWarning = "NOTE: Passwords cannot be backed up!"
        BackupUsersPasswordNote = "During restore a NEW password will be set (displayed)"
        BackupRegistry = "Important registry keys being backed up..."
        BackupRegistrySaved = "Registry keys backed up"
        BackupSystem = "System information being backed up..."
        BackupSystemSaved = "System information backed up"
        BackupSaving = "Saving backup..."
        BackupSuccess = "Backup successfully created!"
        BackupCompleted = "BACKUP SUCCESSFULLY COMPLETED"
        BackupFile = "Backup file:"
        BackupSize = "Size:"
        BackupSavedItems = "Backed up:"
        BackupNote = "This backup can be restored by running this script again and selecting 'Restore' from the main menu."
        
        # Backup - Additional Messages
        BackupTargetTitle = "BACKUP TARGET"
        BackupTargetPath = "Path: {0}"
        BackupTargetDir = "Directory: {0}"
        BackupDurationTitle = "Expected duration:"
        BackupDurationNormal = "    Normal: 2-3 minutes"
        BackupDurationMax = "    Maximum: 6 minutes (on slow systems)"
        BackupCheckingDiskSpace = "Checking available disk space..."
        BackupDiskDrive = "  Drive: {0}:"
        BackupDiskFree = "  Free: {0} GB"
        BackupDiskInsufficientTitle = "Insufficient disk space!"
        BackupDiskRequired = "  Required: At least {0} GB"
        BackupDiskAvailable = "  Available: {0} GB"
        BackupDiskInsufficientError = "Insufficient disk space for backup"
        BackupDiskSufficient = "  [OK] Sufficient disk space available"
        BackupOriginalKept = "    [!] Original backup kept: {0}"
        BackupAppsReading = "  [i] Reading installed apps (max 60s)..."
        BackupAppsTimeout = "AppX-Package Enumeration Timeout (60s) - skipping Apps"
        BackupAppsFailed = "AppX-Package Backup failed: {0}"
        BackupProvisionedReading = "  [i] Reading Provisioned Packages (max 90s)..."
        BackupProvisionedTimeout = "Provisioned Packages Timeout (90s) - skipping"
        BackupProvisionedFailed = "Provisioned Packages could not be backed up: {0}"
        BackupScheduledTasks = "Backup Scheduled Tasks..."
        BackupScheduledTasksSaved = "{0} Scheduled Tasks backed up"
        BackupScheduledTasksNote = "    NOTE: Only State (Enabled/Disabled/Ready) is backed up"
        BackupASRTitle = "Backup ASR Rules..."
        BackupASRSaved = "{0} ASR Rules backed up"
        BackupASRNotFound = "No ASR Rules found (Defender not configured)"
        BackupASRFailed = "ASR Rules Backup failed: {0}"
        BackupExploitTitle = "Backup Exploit Protection..."
        BackupExploitSaved = "Exploit Protection settings backed up"
        BackupExploitNotConfigured = "Exploit Protection not configured"
        BackupExploitNotAvailable = "Get-ProcessMitigation not available (Windows 10 1709+ required)"
        BackupExploitFailed = "Exploit Protection Backup failed: {0}"
        BackupDohTitle = "Backup DoH Configuration..."
        BackupDohSaved = "{0} DoH Servers backed up"
        BackupDohNotFound = "No DoH configuration found"
        BackupDohNotAvailable = "DoH not available (Windows 11+ required)"
        BackupDohFailed = "DoH Backup failed: {0}"
        BackupDohEncryptionTitle = "Backup DoH Encryption Preferences (Adapter-specific)..."
        BackupDohEncryptionSaved = "DoH Encryption Preferences: {0} Adapters, {1} DNS-Servers"
        BackupDohEncryptionNotFound = "No DoH Encryption Preferences found"
        BackupDohEncryptionNoAdapters = "No active network adapters found"
        BackupDohEncryptionFailed = "DoH Encryption Preferences Backup failed: {0}"
        BackupFirewallProfilesTitle = "Backup Firewall Profile Settings..."
        BackupFirewallProfilesSaved = "{0} Firewall Profiles backed up"
        BackupFirewallProfilesNotFound = "No Firewall Profiles found"
        BackupFirewallProfilesFailed = "Firewall Profile Backup failed: {0}"
        BackupDeviceLevelTitle = "Backup Device-Level App Permissions..."
        BackupDeviceLevelFailed = "Device-Level App '{0}' could not be backed up: {1}"
        BackupDeviceLevelSaved = "{0} Device-Level App Permissions backed up"
        BackupDeviceLevelNotFound = "No Device-Level App Permissions found"
        BackupDeviceLevelError = "Device-Level Backup failed: {0}"
        BackupConvertingJSON = "  [i] Converting to JSON (max 120s)..."
        BackupJSONTimeout = "JSON Timeout - trying with reduced data..."
        BackupJSONFallback = "  [i] FALLBACK: Without Firewall Rules"
        BackupJSONFailed = "JSON conversion failed!"
        BackupJSONReduced = "  [OK] JSON created (REDUCED)"
        BackupJSONComplete = "  [OK] JSON created (COMPLETE)"
        BackupJSONEmpty = "JSON conversion empty!"
        BackupJSONSize = "  [i] Size: {0} KB"
        BackupSavingFile = "  [i] Saving file..."
        BackupFileTooSmall = "Backup file too small!"
        BackupValidationTitle = "BACKUP VALIDATION"
        BackupValidating = "Validating backup file..."
        BackupValidationFileTooSmall = "Backup validation failed: File too small ({0} KB)"
        BackupValidationFileSize = "  [OK] File size: {0} KB"
        BackupValidationJSONOK = "  [OK] JSON format correct"
        BackupValidationNoSettings = "Backup validation failed: Settings object missing"
        BackupValidationNoTimestamp = "Backup validation failed: Timestamp missing"
        BackupValidationStructureOK = "  [OK] Backup structure correct"
        BackupValidationJSONFailed = "  [WARN] JSON validation failed (not critical)"
        BackupValidationJSONError = "         Error: {0}"
        BackupValidationHint1 = "  HINT: The backup was created, but validation failed."
        BackupValidationHint2 = "           This sometimes happens with PowerShell JSON serialization."
        BackupValidationHint3 = "           The backup should still be usable!"
        BackupValidationEmpty = "  [WARN] Backup seems to be empty"
        BackupValidationDataOK = "  [OK] Backup contains data"
        BackupValidationSkipped = "  [WARN] JSON validation skipped (backup should still be usable)"
        BackupValidationFile = "  File: {0}"
        BackupValidationSize = "  Size: {0} KB"
        BackupValidationStatusComplete = "  Status: Complete and valid"
        BackupValidationStatusCreated = "  Status: Created (JSON validation failed)"
        BackupLastWarningTitle = "LAST WARNING BEFORE START"
        BackupLastWarningText = "  After ENTER the main script starts in Enforce Mode and runs completely!"
        BackupLastWarningAllModules = "  All modules will be executed - NO further prompts!"
        BackupLastWarningAbort = "  Last chance to abort: Press CTRL+C"
        BackupLastWarningPressEnter = "  Press ENTER to start now..."
        BackupConfirmed = "Backup confirmed - Main script starts NOW!"
        BackupFailedTitle = "BACKUP FAILED!"
        BackupTempCleaned = "Temp backup file cleaned up: {0}"
        BackupErrorWarningTitle = "WARNING: Backup could not be created!"
        BackupErrorContinuePrompt = "  Do you want to continue WITHOUT backup?"
        BackupErrorContinueRisk = "  (Not recommended - You have NO safety net!)"
        BackupErrorContinueYes = "  [Y] Yes, continue anyway (RISKY!)"
        BackupErrorContinueNo = "  [N] No, abort (RECOMMENDED!)"
        BackupErrorContinueChoice = "  Your choice [Y/N]: "
        BackupErrorUserContinues = "  [WARNING] User continues WITHOUT backup!"
        BackupErrorNoSafetyNet = "  Main script will continue - NO safety net!"
        BackupErrorUserAborted = "  [ABORT] User aborted - CORRECT decision!"
        BackupErrorWillNotContinue = "  Main script will NOT continue!"
        
        # Restore Script
        RestoreBanner = "RESTORE - Windows 11 Security Baseline Settings"
        RestoreSearching = "Searching for available backups..."
        RestoreNoneFound = "No backups found in:"
        RestoreCreateFirst = "Create a backup first with: .\\Backup-SecurityBaseline.ps1"
        RestoreAvailable = "Available backups: {0} found"
        RestoreShowingLatest = "Showing the {0} newest backups"
        RestoreShowAll = "For all backups: Press [A]"
        RestoreSelectPrompt = "Select a backup"
        RestoreOrCancel = "or [0] to cancel:"
        RestoreShowingAll = "Showing ALL {0} backups..."
        RestoreCancelled = "Cancelled."
        RestoreInvalidSelection = "Invalid selection!"
        RestoreNotFound = "Backup file not found:"
        RestoreLoading = "Loading backup..."
        RestoreLoaded = "Backup loaded"
        RestoreBackupDate = "Backup date:"
        RestoreHostname = "Hostname:"
        RestoreOS = "OS:"
        RestoreLoadError = "Backup could not be loaded:"
        RestoreLoadReasons = "Possible reasons:"
        RestoreLoadCorrupt = "File is corrupt"
        RestoreLoadInvalid = "Invalid JSON format"
        RestoreLoadModified = "File was manually modified"
        RestoreWarningTitle = "!!! WARNING !!!"
        RestoreWarningText = "This script restores ALL settings from backup!"
        RestoreWarningMeans = "This means:"
        RestoreWarningDNS = "DNS will be reset"
        RestoreWarningHosts = "Hosts file will be overwritten"
        RestoreWarningServices = "Services will be reset"
        RestoreWarningFirewall = "Firewall rules will be deleted"
        RestoreWarningRegistry = "Registry keys will be reset"
        RestoreWarningRisk = "SECURITY RISK: System will be LESS secure!"
        RestoreConfirm = "Do you REALLY want to continue? [Y/N]:"
        RestoreStarting = "Starting restore process..."
        RestoreDNS = "DNS Settings being restored..."
        RestoreDNSOK = "DNS on '{0}' restored:"
        RestoreDNSAuto = "DNS on '{0}' set to AUTOMATIC"
        RestoreHosts = "Hosts file being restored..."
        RestoreHostsOK = "Hosts file restored"
        RestoreHostsBackup = "Old hosts file backed up:"
        RestoreServices = "Services being restored..."
        RestoreServicesOK = "StartType set to '{0}'"
        RestoreServicesNotFound = "Service '{0}' no longer exists"
        RestoreFirewall = "Firewall rules being restored..."
        RestoreFirewallDeleting = "Deleting custom firewall rules..."
        RestoreFirewallOK = "Rule '{0}' deleted"
        RestoreFirewallRestoring = "Restoring status of all firewall rules..."
        RestoreFirewallStatus = "Firewall rules status checked"
        RestoreFirewallChanged = "Rules status changed"
        RestoreFirewallNoData = "No firewall backup data found"
        RestoreRegistry = "Registry keys being restored..."
        RestoreRegistryOK = "Value set to '{0}'"
        RestoreRegistryDeleted = "deleted (originally didn't exist)"
        RestoreUsers = "User accounts being restored..."
        RestoreUsersRenamed = "Administrator account renamed: '{0}' -> '{1}'"
        RestoreUsersEnabled = "Administrator account enabled"
        RestoreUsersDisabled = "Administrator account disabled"
        RestoreUsersPasswordTitle = "IMPORTANT: Password must be reset!"
        RestoreUsersPasswordWarning = "Original password CANNOT be restored!"
        RestoreUsersPasswordPrompt = "Set a NEW password for '{0}'? [Y/N]:"
        RestoreUsersPasswordOptions = "Options:"
        RestoreUsersPasswordRandom = "[1] Generate RANDOM 20-character password (displayed!)"
        RestoreUsersPasswordCustom = "[2] Enter own password"
        RestoreUsersPasswordSkip = "[3] Skip"
        RestoreUsersPasswordChoose = "Choose [1-3]:"
        RestoreUsersPasswordNew = "NEW PASSWORD FOR '{0}':"
        RestoreUsersPasswordNote = "PLEASE WRITE DOWN THIS PASSWORD!"
        RestoreUsersPasswordSet = "Password set!"
        RestoreUsersPasswordSkipped = "Password setting skipped"
        RestoreUsersPasswordOldRandom = "Administrator still has old random password!"
        RestoreUsersAlready = "Administrator account already has original name"
        RestoreUsersNotFound = "Administrator account not found"
        RestoreApps = "Apps being restored..."
        RestoreAppsMissing = "apps were installed, now missing"
        RestoreAppsPackages = "Provisioned Packages found in backup!"
        RestoreAppsCanRestore = "These can be restored"
        RestoreAppsPrompt = "Restore missing apps? [Y/N]:"
        RestoreAppsRestoring = "Restoring Provisioned Packages..."
        RestoreAppsMayTakeTime = "(This may take several minutes!)"
        RestoreAppsInstalling = "Installing:"
        RestoreAppsMustReinstall = "Package must be installed via Microsoft Store"
        RestoreAppsManual = "Packages must be manually installed"
        RestoreAppsOpenStore = "Open Microsoft Store and search for the apps"
        RestoreAppsSkipped = "App restore skipped"
        RestoreAppsNone = "No Provisioned Packages in backup"
        RestoreAppsStoreNote = "Apps can be reinstalled via Microsoft Store"
        RestoreAppsList = "Missing apps (selection):"
        RestoreAppsMore = "... and {0} more"
        RestoreAppsListSaved = "Full list available on desktop after reboot"
        RestoreAppsAllPresent = "All apps still present"
        
        # Desktop App List File Content (English)
        AppListFileName = "Missing-Apps-After-Restore"
        AppListFileHeader = "MISSING APPS AFTER SECURITY BASELINE RESTORE"
        AppListFileDate = "Date:"
        AppListFileTotal = "Total Missing Apps:"
        AppListFileIntro = "These apps were removed by the Security Baseline script\nand need to be manually reinstalled from Microsoft Store:"
        AppListFileHowToHeader = "HOW TO REINSTALL:"
        AppListFileStep1 = "1. Open Microsoft Store (Win + S, search 'Microsoft Store')"
        AppListFileStep2 = "2. Search for each app by name"
        AppListFileStep3 = "3. Click 'Get' or 'Install'"
        AppListFileStep4 = "4. Apps will be reinstalled"
        AppListFileNote = "NOTE: Some apps may not be available in your region\n      or may have been discontinued by Microsoft."
        RestoreDNSClear = "Clearing DNS cache..."
        RestoreDNSCleared = "DNS cache cleared"
        RestoreDNSTimeout = "DNS Cache Flush timeout - will be cleared at reboot"
        RestoreCompleted = "RESTORE COMPLETED"
        RestoreStats = "Statistics:"
        RestoreStatsSuccess = "Successful:"
        RestoreStatsFailed = "Failed:"
        RestoreStatsSkipped = "Skipped:"
        RestoreSomeErrors = "Some restore operations failed!"
        RestoreCheckLog = "Check the log for details:"
        RestoreRebootTitle = "REBOOT RECOMMENDED"
        RestoreRebootNeeded = "Some changes require a reboot to be fully active:"
        RestoreRebootServices = "Service changes"
        RestoreRebootRegistry = "Registry changes"
        RestoreRebootDNS = "DNS settings"
        RestoreRebootNow = "Reboot NOW? [Y/N]:"
        RestoreRebooting = "Reboot in 10 seconds..."
        RestoreRebootAbort = "Press CTRL+C to abort"
        RestoreRebootPostponed = "Reboot postponed."
        RestoreRebootManual = "Please reboot manually: shutdown /r /t 0"
    }
    
    de = @{
        # Banner
        BannerTitle = "NoID Privacy - Windows 11 25H2 Security Baseline"
        BannerSubtitle = "Maximum Security + Privacy + Performance"
        
        # Main Menu
        MainMenuTitle = "HAUPT-MENUE"
        MainMenuAudit = "Audit Mode"
        MainMenuAuditDesc = "Nur pruefen, NICHTS aendern (empfohlen fuer Tests)"
        MainMenuEnforce = "Enforce Mode"
        MainMenuEnforceDesc = "ALLES anwenden (volle Haertung)"
        MainMenuCustom = "Custom Mode"
        MainMenuCustomDesc = "Module einzeln auswaehlen"
        MainMenuVerify = "Verify"
        MainMenuVerifyDesc = "Pruefen ob Baseline angewendet"
        MainMenuExit = "Exit"
        MainMenuExitDesc = "Beenden"
        MainMenuPrompt = "Ihre Wahl"
        
        # Enforce Mode Banner
        EnforceBannerTitle = "ENFORCE MODE - PRODUKTIV-MODUS (VOLLER SCHUTZ):"
        EnforceBannerWarning1 = "ACHTUNG: Alle Aenderungen werden AKTIV angewendet!"
        EnforceBannerWarning2 = "Dies ist NICHT rueckgaengig zu machen ohne Backup/Restore!"
        EnforceBannerModulesTitle = "ALLE Module werden VOLLSTAENDIG aktiviert:"
        EnforceBannerSecurityTitle = "SECURITY:"
        EnforceBannerSecurity1 = "Microsoft Security Baseline 25H2 (Defender, Firewall, Services)"
        EnforceBannerSecurity2 = "ASR Rules (23 Rules ENFORCE MODE = aktiv blockieren!)"
        EnforceBannerSecurity3 = "VBS + Credential Guard + HVCI + LSA Protection"
        EnforceBannerSecurity4 = "BitLocker Policies (XTS-AES-256 + TPM 2.0)"
        EnforceBannerSecurity5 = "UAC Maximum + Enhanced Privilege Protection"
        EnforceBannerSecurityMore = "... und vieles mehr!"
        EnforceBannerNetworkTitle = "NETWORK:"
        EnforceBannerNetwork1 = "DNS over HTTPS (Cloudflare 1.1.1.1 - verschluesselt!)"
        EnforceBannerNetwork2 = "DNS Blocklist (80.000+ Malware/Tracking-Domains)"
        EnforceBannerNetwork3 = "Firewall Default Deny + Block All Inbound"
        EnforceBannerNetwork4 = "SMB Signing + NetBIOS + LLMNR + mDNS disabled"
        EnforceBannerNetwork5 = "Remote Access komplett AUS (RDP, WinRM, RemoteRegistry)"
        EnforceBannerNetworkMore = "... und vieles mehr!"
        EnforceBannerPrivacyTitle = "PRIVACY:"
        EnforceBannerPrivacy1 = "37 App Permissions auf 'Deny' (Camera/Mic/Location/etc.)"
        EnforceBannerPrivacy2 = "Wireless Display/Miracast komplett deaktiviert"
        EnforceBannerPrivacy3 = "Telemetrie Security-Level (Required Diagnostic Data only)"
        EnforceBannerPrivacy4 = "OneDrive Auto-Upload blockiert (User hat Kontrolle!)"
        EnforceBannerPrivacy5 = "AI Features blockiert (Recall, Copilot, Click to Do, Paint AI)"
        EnforceBannerPrivacyMore = "... und vieles mehr!"
        EnforceBannerBloatwareTitle = "BLOATWARE & PERFORMANCE:"
        EnforceBannerBloatware1 = "50+ vorinstallierte Apps entfernt (Xbox, Cortana, etc.)"
        EnforceBannerBloatware2 = "Consumer Features disabled (kein Auto-Install von Candy Crush!)"
        EnforceBannerBloatware3 = "100+ Scheduled Tasks deaktiviert (weniger CPU-Last)"
        EnforceBannerBloatware4 = "Event Logs optimiert (weniger Disk I/O)"
        EnforceBannerBloatware5 = "Background Activities + Startup Apps reduziert"
        EnforceBannerBloatwareMore = "... und vieles mehr!"
        EnforceBannerConfirm = "Moechten Sie WIRKLICH fortfahren? [J/N]:"
        EnforceBannerStarting = "Starte Enforce Mode..."
        
        # Language Selection
        LanguagePrompt = "Select language / Sprache waehlen"
        LanguageEnglish = "English"
        LanguageGerman = "German / Deutsch"
        
        # Module Selection
        ModuleSelectionTitle = "MODULE AUSWAHL (Custom Mode)"
        ModuleSelectionInstructions = "Verwenden Sie Pfeiltasten zum Navigieren, SPACE zum Aktivieren/Deaktivieren"
        ModuleSelectionConfirm = "ENTER zum Bestaetigen und Starten"
        ModuleMandatory = "(Pflicht)"
        
        # Modules
        ModuleCore = "Security Baseline Core"
        ModuleCoreDesc = "Basis-Haertung - NetBIOS + Auditing + Print Spooler + etc."
        ModuleASR = "ASR Rules (Attack Surface Reduction)"
        ModuleASRDesc = "19 ASR-Regeln + USB Control + Smart App Control"
        ModuleAdvanced = "Advanced Security"
        ModuleAdvancedDesc = "VBS + Credential Guard + BitLocker + LAPS"
        ModuleDNS = "DNS Security"
        ModuleDNSDesc = "DNSSEC + DNS Blocklist (80K Domains) + Firewall"
        ModuleBloatware = "Bloatware Removal"
        ModuleBloatwareDesc = "Entfernt vorinstallierte Apps - Games und Werbung"
        ModuleTelemetry = "Telemetry Deactivation"
        ModuleTelemetryDesc = "95% Telemetrie deaktiviert"
        ModulePerformance = "Performance Optimization"
        ModulePerformanceDesc = "Scheduled Tasks + Event Logs + Background Activities"
        
        # Reboot Prompt
        RebootTitle = "NEUSTART ERFORDERLICH"
        RebootChanges = "Folgende Aenderungen benoetigen einen Neustart:"
        RebootVBS = "VBS und Credential Guard (Hardware-Security)"
        RebootBitLocker = "BitLocker Policies"
        RebootFirewall = "Firewall-Regeln"
        RebootServices = "Service-Aenderungen"
        RebootRegistry = "Registry-Einstellungen"
        RebootPerformance = "Performance-Optimierungen"
        RebootWarning = "Ohne Neustart sind einige Features NICHT aktiv!"
        RebootQuestion = "Was moechten Sie tun?"
        RebootNow = "Jetzt neu starten"
        RebootNowDesc = "Countdown 10 Sekunden, dann Reboot"
        RebootLater = "Spaeter neu starten"
        RebootLaterDesc = "Sie muessen manuell neu starten!"
        RebootPrompt = "Ihre Wahl"
        RebootChoiceFormat = "[J/N]:"
        RebootCountdown = "Neustart in:"
        RebootSeconds = "Sekunden..."
        RebootAbortHint = "(STRG+C zum Abbrechen)"
        RebootStarting = "System wird neu gestartet..."
        RebootPostponed = "Neustart wurde verschoben."
        RebootImportant = "WICHTIG: Bitte starten Sie Ihren Computer manuell neu!"
        RebootFeaturesActive = "Folgende Features sind erst nach Neustart aktiv:"
        RebootManualCommand = "Sie koennen jetzt mit 'shutdown /r /t 0' neu starten."
        RebootErrorTitle = "Neustart konnte nicht ausgefuehrt werden!"
        RebootErrorDetails = "Details: {0}"
        RebootManualRestartPrompt = "Bitte starten Sie den Computer manuell neu:"
        RebootManualRestartCommand = "shutdown /r /t 0"
        RebootSkipped = "Neustart wurde uebersprungen (-SkipReboot Parameter)"
        RebootSkippedWarning = "Einige Aenderungen werden erst nach Neustart aktiv!"
        
        # CTRL+C Handler
        AbortUserCancelled = "[ABBRUCH] User hat Script mit STRG+C abgebrochen!"
        AbortCleanup = "[i] Cleanup wird durchgefuehrt..."
        AbortComplete = "[OK] Cleanup abgeschlossen"
        AbortExited = "[i] Script wurde sicher beendet"
        
        # Instance/Mutex Errors
        ErrorInstanceRunning = "[FEHLER] Script laeuft bereits!"
        ErrorInstanceParallel = "Das Security Baseline Script kann nicht parallel ausgefuehrt werden."
        ErrorInstanceReason = "Grund: Registry/Service-Aenderungen wuerden sich gegenseitig stoeren."
        ErrorInstanceWait = "Bitte warten Sie bis die andere Instanz fertig ist."
        
        # Module Loading
        InfoCalculatingOrder = "[i] Berechne Modul-Ladereihenfolge..."
        InfoLoadingModules = "[i] Lade Module..."
        InfoLoadedModule = "[i] Modul geladen:"
        ErrorLoadModule = "[FEHLER] Konnte Modul nicht laden:"
        
        # Restore Mode Messages
        RestoreModeActivated = "RESTORE MODUS AKTIVIERT"
        RestoreModeApplyExiting = "[i] Apply-Script wird BEENDET"
        RestoreModeStarting = "[i] Restore-Script wird gestartet..."
        RestoreModeProcessStart = "[i] Starte Restore-Prozess (bitte warten)..."
        RestoreModeScriptComplete = "[i] Restore-Script abgeschlossen (Exit-Code: {0})"
        RestoreModeApplyExitNow = "[i] Apply-Script wird JETZT beendet (Environment.Exit)..."
        RestoreModeNotFound = "[FEHLER] Restore-Script nicht gefunden: {0}"
        
        # Backup Creation Messages
        BackupFullCreating = "VOLLSTAENDIGES BACKUP WIRD ERSTELLT"
        BackupIncludes = "[i] Das Backup umfasst:"
        BackupIncludesDNS = "    - DNS Settings (alle Adapter)"
        BackupIncludesHosts = "    - Hosts-Datei (aktuelle Version)"
        BackupIncludesServices = "    - Alle Services (StartType)"
        BackupIncludesFirewall = "    - Firewall-Regeln (Status)"
        BackupIncludesRegistry = "    - Registry-Keys (wichtige)"
        BackupIncludesUsers = "    - User Accounts (Namen)"
        BackupIncludesApps = "    - Installierte Apps (Liste)"
        BackupDuration = "[i] Erwartete Dauer: 2-3 Minuten (max 6 Min)"
        BackupRunning = "[i] Backup laeuft jetzt - bitte warten..."
        BackupFailed = "[FEHLER] Backup fehlgeschlagen (Exit-Code: {0})"
        BackupContinueRP = "Fortfahren mit nur Restore Point..."
        BackupNotFound = "[WARNUNG] Backup-Script nicht gefunden: {0}"
        BackupFallbackRP = "[WARNUNG] Fortfahren mit nur Restore Point..."
        
        # Critical Errors
        CriticalCodeAfterRestore = "[CRITICAL ERROR] Code sollte nach Restore nicht weiterlaufen!"
        CriticalRestoreNotCaught = "[CRITICAL ERROR] Restore-Modus wurde nicht abgefangen!"
        CriticalForcingExit = "[CRITICAL ERROR] Erzwinge Exit..."
        CriticalNeverReached = "[FEHLER] Diese Zeile sollte NIEMALS angezeigt werden!"
        
        # Logging
        VerboseOldLogsCleared = "Alte Transcript-Logs bereinigt: {0} Dateien"
        VerboseLoadOrder = "Ladereihenfolge: {0}"
        VerboseTranscriptStarted = "Transcript gestartet: {0}"
        WarningTranscriptFailed = "Konnte Transcript nicht starten: {0}"
        WarningTranscriptContinue = "Fahre ohne Transcript-Logging fort..."
        
        # Backup Success & Abort Messages
        BackupSuccessComplete = "BACKUP ERFOLGREICH ABGESCHLOSSEN"
        BackupCanRestore = "[OK] Backup kann jederzeit wiederhergestellt werden:"
        BackupRunRestore = "     Restore-SecurityBaseline.ps1 ausfuehren"
        BackupAbortTitle = "[ABBRUCH] Backup fehlgeschlagen und User hat abgebrochen!"
        BackupAbortNoScript = "Das Hauptskript wird NICHT fortfahren."
        BackupAbortReason = "Grund: Kein Safety Net (kein Backup, kein Restore Point)."
        BackupAbortRecommend = "Empfehlung:"
        BackupAbortStep1 = "1. Problem beheben (siehe Fehler oben)"
        BackupAbortStep2 = "2. Script erneut starten"
        BackupAbortStep3 = "3. Oder: Manuelle Restore Point erstellen und fortfahren"
        BackupValidationSuccess = "[SUCCESS] BACKUP ERFOLGREICH VALIDIERT!"
        
        # Privacy Settings User Messages (App permissions, NOT hardware!)
        CameraMicDefaultOff = "App-Berechtigungen fuer Kamera und Mikrofon: ENTFERNT"
        CameraMicUserCan = "Um Apps wieder zu erlauben: Settings | Datenschutz | Kamera/Mikrofon:"
        CameraMicStep1 = "  1. Master-Switch EINschalten"
        CameraMicStep2 = "  2. Dann einzelne Apps erlauben"
        CameraMicBestPractice = "HINWEIS: Hardware-Geraete sind noch AKTIV! Bei Bedarf im Geraete-Manager deaktivieren."
        
        # Progress
        ProgressCore = "Core Security Baseline..."
        ProgressASR = "Attack Surface Reduction..."
        ProgressAdvanced = "Advanced Security (VBS + BitLocker + LAPS)..."
        ProgressDNS = "DNS Security und Firewall..."
        ProgressBloatware = "Bloatware Removal..."
        ProgressTelemetry = "Telemetry Deactivation..."
        ProgressPerformance = "Performance Optimization..."
        
        # Success Messages
        SuccessCore = "Core Security Baseline abgeschlossen!"
        SuccessASR = "ASR Rules aktiviert"
        SuccessAdvanced = "Advanced Security aktiviert!"
        SuccessDNS = "DNS Security und Firewall konfiguriert!"
        SuccessBloatware = "Bloatware entfernt!"
        SuccessTelemetry = "Telemetrie deaktiviert!"
        SuccessPerformance = "Performance optimiert!"
        SuccessFinal = "Security Baseline erfolgreich angewendet!"
        SuccessReport = "Compliance Report:"
        
        # Errors
        ErrorGeneral = "FEHLER:"
        ErrorInvalidInput = "Ungueltige Eingabe! Bitte"
        ErrorNotFound = "nicht gefunden!"
        ErrorExpected = "Erwartet:"
        ErrorEmptyInput = "Leere Eingabe nicht erlaubt!"
        ErrorInputFailed = "Eingabe-Fehler: {0}"
        ErrorClearHostFailed = "Clear-Host nicht verfuegbar (non-interactive session)"
        ErrorInteractiveRequired = "Diese Funktion benoetigt eine interaktive PowerShell-Session."
        ErrorKeyboardFailed = "Tastaturabfrage fehlgeschlagen: {0}"
        ErrorReadKeyFailed = "ReadKey fehlgeschlagen: {0}"
        
        # Confirmations
        ConfirmContinue = "Moechten Sie fortfahren? [J/N]:"
        ConfirmWarning = "Letzte Warnung! Sind Sie SICHER? [J/N]:"
        ConfirmYes = "J"
        ConfirmNo = "N"
        PressAnyKey = "Druecken Sie eine Taste..."
        PressAnyKeyToReturn = "Druecken Sie eine Taste zum Zurueckkehren..."
        PressEnter = "Druecken Sie Enter"
        
        # Goodbye
        Goodbye = "Auf Wiedersehen!"
        
        # AI Module
        AIRecallTitle = "Windows Recall - KOMPLETT DEAKTIVIEREN"
        AIRecallDisabled = "Windows Recall: KOMPLETT DEAKTIVIERT"
        AIRecallNightmare = "Recall war ein PRIVACY NIGHTMARE - Screenshots von Passwoertern, Banking, etc.!"
        AIRecallSnapshotsDeleted = "Alle vorhandenen Snapshots werden beim naechsten Login geloescht"
        AICopilotTitle = "Windows Copilot - MULTI-LAYER BLOCKING"
        AICopilotBlocked = "Windows Copilot: MULTI-LAYER BLOCKIERT"
        AICopilot4Layers = "Blockiert auf 4 Ebenen (Microsoft aendert staendig die Pfade!)"
        AICopilotIconRemoved = "Copilot Icon wird von Taskbar entfernt"
        AIClickToDoTitle = "Click to Do - DEAKTIVIEREN"
        AIClickToDoDisabled = "Click to Do: DEAKTIVIERT"
        AIClickToDoNoAnalysis = "Keine AI-basierten Screenshot-Analysen mehr"
        AIPaintTitle = "Paint AI Features - DEAKTIVIEREN"
        AIPaintDisabled = "Paint AI Features: ALLE DEAKTIVIERT"
        AIPaintFeatures = "Cocreator, Generative Fill, Image Creator = AUS"
        AINotepadTitle = "Notepad AI Features - DEAKTIVIEREN"
        AINotepadDisabled = "Notepad AI Features: DEAKTIVIERT"
        AINotepadFeatures = "Copilot Button + KI-Assistenz in Editor = AUS"
        AISettingsAgentTitle = "Settings Agent - DEAKTIVIEREN"
        AISettingsAgentDisabled = "Settings Agent: DEAKTIVIERT"
        AICopilotProactiveTitle = "Copilot Best Practice 25H2 - DEAKTIVIEREN"
        AICopilotProactiveDisabled = "Copilot Proactive: DEAKTIVIERT"
        AIRecallStorageTitle = "Recall Storage Limits - MINIMUM"
        AIRecallStorageMinimum = "Recall Storage Limits: AUF MINIMUM gesetzt"
        AIRecallStorageFallback = "Fallback falls Recall reaktiviert wird: Nur 10GB fuer 1 Tag"
        AILockdownSummary = "  AI LOCKDOWN - ZUSAMMENFASSUNG"
        AIDisabled = "DEAKTIVIERT:"
        AIRecallScreenshots = "  [X] Windows Recall (Screenshots)"
        AICopilotMultiLayer = "  [X] Windows Copilot (Multi-Layer)"
        AIClickToDoAnalysis = "  [X] Click to Do (AI Analysis)"
        AIPaintAI = "  [X] Paint AI (Cocreator, Gen Fill, Image Creator)"
        AINotepadAI = "  [X] Notepad AI (Copilot Button + KI-Assistenz)"
        AISettingsAgent = "  [X] Settings Agent (AI in Settings)"
        AICopilotProactive = "  [X] Copilot Proactive Features"
        AIFallback = "FALLBACK:"
        AIRecallMinimum = "  [!] Recall Storage auf Minimum (10GB, 1 Tag)"
        AIStatus = "STATUS:"
        AISystemWideBlocked = "  [OK] Alle AI Features system-weit blockiert (HKLM)"
        AIAllUsers = "  [OK] Gilt fuer ALLE User"
        AIMultiLayerBlocking = "  [OK] Multi-Layer Blocking (mehrere Registry Pfade)"
        AINote = "HINWEIS:"
        AIMicrosoftChanges = "  Microsoft aendert staendig AI-Implementierung!"
        AIFutureProof = "  Wir blockieren auf mehreren Ebenen fuer Zukunftssicherheit."
        
        # DNS Module
        DNSSECActivating = "DNSSEC wird aktiviert (DNS-Spoofing-Schutz)..."
        DNSSECModeOpportunistic = "DNSSEC Mode: Opportunistic (sicher + kompatibel)"
        DNSSECActivated = "DNSSEC Validation aktiviert"
        DNSSECResponsesValidated = "DNS-Antworten werden auf Authentizitaet geprueft (Anti-Spoofing)"
        DNSBlocklistInstalling = "DNS Blocklist wird installiert (80K+ Domains)..."
        DNSBlocklistOptimization = "OPTIMIERUNG: 9 Domains pro Zeile (DNS-Cache-optimiert)"
        DNSBlocklistCompressed = "Steven Black's unified hosts - komprimiert fuer Performance"
        DNSAntivirusCompatibility = "ANTIVIRUS-KOMPATIBILITAET: hosts-Datei mit 80K+ Eintraegen"
        DNSBitdefenderWarning = "Bitdefender-User: Protection | Vulnerability | Settings | 'Scan hosts file' DEAKTIVIEREN!"
        DNSInternetBlock = "Sonst kann Internet-Zugriff blockiert werden!"
        DNSAlreadyInstalled = "Steven Black's Hosts ist bereits installiert"
        DNSSkipDownload = "Ueberspringe Download (idempotent)"
        DNSBackupOriginal = "Original Hosts-File gesichert: {0}"
        DNSBackupFailed = "Hosts-File Backup fehlgeschlagen: {0}"
        DNSBackupExists = "Original Backup existiert bereits: {0}"
        DNSUsingLocal = "Verwende lokale hosts-Datei aus Projektverzeichnis..."
        DNSCriticalError = "KRITISCHER FEHLER: Lokale hosts-Datei nicht gefunden!"
        DNSExpected = "Erwartet: {0}"
        DNSCannotInstall = "DNS-Blocklist kann NICHT installiert werden!"
        DNSInvalidHeader = "Lokale hosts-Datei hat ungueltigen Header!"
        DNSExpectedHeader = "Erwartet: '# Title: StevenBlack/hosts'"
        DNSValidated = "Lokale hosts-Datei validiert: {0} Domains"
        DNSInstalling = "Installiere hosts-Datei (atomarer Replace)..."
        DNSFileTooSmall = "Kopierte Datei zu klein ({0} Zeilen < 1000)!"
        DNSAtomicSuccess = "Atomarer Replace erfolgreich"
        DNSInstallFailed = "Hosts-Datei Installation fehlgeschlagen: {0}"
        DNSFlushingCache = "DNS-Cache wird geleert..."
        DNSCacheFlushed = "DNS Cache erfolgreich geleert"
        DNSFlushTimeout = "DNS Cache Flush Timeout (10s) - wird uebersprungen"
        DNSFlushError = "DNS Cache Flush Fehler (nicht kritisch): {0}"
        DNSBlocklistInstalled = "Steven Black's Blocklist installiert ({0} Domains)"
        DNSBlockedTypes = "Blockiert: Malware, Tracking, Werbung, Coin-Miner, Phishing"
        DNSSource = "Quelle: Lokale Datei (NoID Privacy Project)"
        DNSLegitimateWarning = "Einige legitime Websites koennen betroffen sein!"
        DNSInstallationFailed = "Installation fehlgeschlagen: {0}"
        DNSNotInstalled = "DNS-Blocklist wurde NICHT installiert!"
        FirewallConfiguring = "Firewall wird auf Maximum Inbound Security gesetzt..."
        FirewallProfileError = "Konnte Firewall-Profil {0} nicht konfigurieren: {1}"
        FirewallActivated = "Strict Inbound Firewall aktiviert"
        FirewallInbound = "Eingehend: ALLES BLOCKIERT (auch erlaubte Apps!)"
        FirewallOutbound = "Ausgehend: ALLES ERLAUBT (Internet funktioniert normal)"
        FirewallMaxSecurity = "MAXIMUM SECURITY: NICHTS kann von aussen rein!"
        FirewallCheckbox = "Checkbox 'Blockiert alle eingehenden Verbindungen' ist jetzt AKTIV!"
        
        # Common Module
        CommonCreatingKey = "Erstelle Registry-Key: {0}"
        CommonRegistrySet = "Registry gesetzt: {0}\\{1} = {2}"
        CommonRegistryError = "Fehler bei Registry-Aenderung: {0}\\{1} - {2}"
        CommonServiceNotFound = "Service '{0}' nicht gefunden (normal bei Legacy-Services in Windows 11)"
        CommonDisablingService = "Deaktiviere Service: {0} (Status: {1})"
        CommonSetServiceFailed = "Set-Service fehlgeschlagen (Legacy Service nicht konfigurierbar)"
        CommonServiceStopped = "Service gestoppt nach {0}s"
        CommonServiceAlreadyStopped = "Service war bereits gestoppt"
        CommonServiceNotInstalled = "Service {0} nicht gefunden (OK - nicht installiert)"
        CommonServiceTimeout = "Service {0} stoppt nicht - Timeout nach {1}s"
        CommonServiceDisabledWillNotStart = "[OK] {0} - Disabled (Status={1} - wird beim naechsten Reboot nicht starten)"
        CommonServiceCouldNotDisable = "Service {0} konnte nicht deaktiviert werden (StartMode={1})"
        CommonServiceDisableError = "Fehler beim Deaktivieren von Service {0}: {1}"
        CommonCIMCheckFailed = "CIM-Check fehlgeschlagen, verwende Fallback: {0}"
        CommonServiceDisabledAssumed = "[OK] {0} - Disabled (angenommen - Set-Service war erfolgreich)"
        
        # Bloatware Module
        BloatwareRemoving = "Bloatware wird entfuernt..."
        BloatwareScanning = "Scanne nach Bloatware..."
        BloatwareCheckingPatterns = "Pruefe {0} App-Muster..."
        BloatwareLoadingPackages = "Lade Provisioned Packages (einmalig, ~5 Sekunden)..."
        BloatwarePackagesLoaded = "{0} Provisioned Packages geladen"
        BloatwareLoadFailed = "Get-AppxProvisionedPackage fehlgeschlagen: {0}"
        BloatwarePackagesSkipped = "Provisioned Packages konnten nicht geladen werden - wird uebersprungen"
        BloatwareProgress = "Fortschritt: {0}/{1} Apps geprueft..."
        BloatwareCompleted = "Abgeschlossen: {0}/{1} Apps geprueft"
        BloatwareRemovalDone = "Bloatware-Removal abgeschlossen"
        BloatwareRemoved = "Entfuernt: {0} Apps"
        BloatwareFailed = "Fehlgeschlagen: {0} Apps (evtl. nicht installiert)"
        BloatwareStoreNote = "HINWEIS: Entfuernte Apps koennen ueber Microsoft Store neu installiert werden"
        BloatwareProvisionedNote = "WICHTIG: Provisioned Packages wurden entfernt - neue Benutzer-Profile haben diese Apps nicht!"
        ConsumerFeaturesDisabling = "Consumer Features und Promoted Apps werden deaktiviert..."
        ConsumerFeaturesDisabled = "Consumer Features und Promoted/Stub-Apps deaktiviert"
        ConsumerFeaturesLinkedIn = "[OK] LinkedIn und andere Stub-Apps werden aus Startmenu entfernt"
        ConsumerFeaturesNoAutoInstall = "[OK] Kein automatisches Installieren von Apps"
        ConsumerFeaturesRestartNote = "[!] HINWEIS: Neustart erforderlich um Startmenu zu aktualisieren!"
        ConsumerFeaturesNoMoreAuto = "Windows wird KEINE Apps mehr automatisch installieren"
        SpecificAppsRemoving = "Entfuerne spezifische Apps..."
        SpecificAppsCortanaRemoving = "Entfuerne Cortana App..."
        SpecificAppsCortanaRemoved = "Cortana App entfuernt"
        SpecificAppsTeamsDisabling = "Deaktiviere Teams Chat Icon..."
        SpecificAppsTeamsDisabled = "Teams Chat Icon deaktiviert"
        SpecificAppsCopilotDisabling = "Deaktiviere Windows Copilot..."
        SpecificAppsCopilotDisabled = "Windows Copilot deaktiviert"
        SpecificAppsWidgetsDisabling = "Deaktiviere Widgets..."
        SpecificAppsWidgetsDisabled = "Widgets deaktiviert"
        
        # ASR Module
        ASRMode = "ASR-Modus: {0}"
        ASRAuditWarning = "AUDIT-Modus aktiv! Blockiert NICHT, nur Logging!"
        ASREvaluateLogs = "Evaluieren Sie die Logs und wechseln Sie danach zu Enforce-Modus"
        ASRCheckingDefender = "Pruefe ob Windows Defender verfuegbar ist..."
        ASRDefenderAvailable = "Defender ist verfuegbar"
        ASRDefenderNotAvailable = "Windows Defender ist NICHT verfuegbar (Drittanbieter-AV aktiv)"
        ASRConfigSkipped = "ASR-Konfiguration wird uebersprungen - Ihr AV bietet bereits Schutz"
        ASRCheckingService = "Pruefe Defender Service Status vor ASR-Konfiguration..."
        ASRStartingService = "Defender Service wird gestartet (erforderlich fuer ASR)..."
        ASRWaitingInit = "Warte 3 Sekunden auf Defender-Initialisierung..."
        ASRServiceStarted = "Defender Service gestartet und initialisiert"
        ASRWaitingStability = "Warte 1 Sekunde fuer Defender-Stabilitaet..."
        ASRServiceNotAvailable = "Defender Service nicht verfuegbar - ASR-Konfiguration wird uebersprungen"
        ASRServiceSolution = "Loesung: Start-Service -Name WinDefend oder ASR-Modul in Custom Mode skippen"
        ASRExistingRules = "Bestehende ASR-Regeln gefunden ({0} Regeln)"
        ASRWillOverwrite = "Diese werden durch neue Konfiguration ueberschrieben"
        ASRConfigured = "ASR-Regeln konfiguriert: {0} Regeln"
        ASRModeSet = "Modus: {0}"
        ASRCannotSetScript = "ASR-Regeln konnten nicht per Script gesetzt werden"
        ASRPropertyNotFound = "Die Eigenschaft 'AttackSurfaceReductionRules_Ids' wurde nicht gefunden"
        ASRManualActivation = "MANUELL AKTIVIEREN: Windows Security | Virus and threat protection | Manage settings | Attack surface reduction rules"
        ASRReasonThirdParty = "Grund: Moeglicherweise Drittanbieter-AV aktiv oder Defender nicht vollstaendig verfuegbar"
        ASRAuditModeActive = "ASR im AUDIT-Modus! Events in Defender-Logs pruefen."
        ASRSwitchToEnforce = "Nach Evaluierung auf Enforce umstellen!"
        ASRExclusionsNote = "ASR Exclusions koennen via Add-MpPreference -AttackSurfaceReductionOnlyExclusions gesetzt werden"
        ASRPreferencesError = "Defender Preferences konnten nicht gelesen werden"
        ASRNoRulesConfigured = "Keine ASR-Regeln konfiguriert"
        ASRConfiguredRules = "Konfigurierte ASR-Regeln: {0}"
        USBConfiguring = "USB Device Control wird konfiguriert..."
        USBActivated = "USB Device Control aktiviert (No Execute)"
        USBNote = "USB-Sticks: Lesen + Schreiben OK, aber .exe/.bat/.ps1 werden NICHT ausgefuehrt"
        USBProtection = "SCHUTZ: BadUSB-Malware kann NICHT ausgefuehrt werden!"
        SACConfiguring = "Smart App Control wird konfiguriert..."
        SACStatus = "Smart App Control Status: {0}"
        SACNotConfigured = "Smart App Control Status: Nicht konfiguriert (Windows entscheidet)"
        SACWindowsManages = "Smart App Control: Windows verwaltet Status automatisch"
        SACEvaluationPeriod = "Nach 7-14 Tagen Evaluation kann Windows SAC aktivieren"
        SACSmartScreenActive = "SmartScreen aktiv"
        
        # Core Module - System Validation
        CoreSystemValidation = "System-Validierung"
        CoreBuildRequired = "Windows 11 25H2 (Build 26100+) erforderlich! Aktuell: {0}"
        CoreBaselineOptimized = "Die Baseline ist speziell fuer Windows 11 25H2 optimiert!"
        CoreOSInfoError = "Fehler beim Abrufen der OS-Informationen: {0}"
        CoreTPMAvailable = "TPM 2.0 verfuegbar und bereit"
        CoreTPMNotActivated = "TPM 2.0 nicht vollstaendig aktiviert (Present: {0}, Ready: {1})"
        CoreTPMStatusError = "TPM-Status konnte nicht abgerufen werden: {0}"
        CoreVBSActivated = "VBS (Virtualization-Based Security) aktiviert"
        CoreVBSStatusUnknown = "VBS-Status konnte nicht ermittelt werden"
        CoreValidationComplete = "System-Validierung abgeschlossen"
        
        # Core Module - NetBIOS
        CoreNetBIOSDisable = "NetBIOS-Namensaufloesung deaktivieren"
        CoreNetBIOSDisabled = "NetBIOS auf allen {0} Adaptern deaktiviert"
        CoreNetworkAdapterError = "Fehler beim Abrufen der Netzwerkadapter: {0}"
        
        # Core Module - Process Auditing
        CoreProcessAuditing = "Prozess-Auditing mit Command Line"
        CoreAuditpolNotFound = "auditpol.exe nicht gefunden: {0}"
        CoreAuditpolSkipped = "Process Creation Auditing via auditpol.exe uebersprungen"
        CoreAuditActivated = "Audit Process Creation aktiviert (EID 4688)"
        CoreAuditpolFailed = "auditpol.exe fehlgeschlagen: Exit Code {0} - Output: {1}"
        CoreLocaleMismatch = "Bekanntes Problem: Fehler 0x00000057 bei Locale-Mismatch (harmlos)"
        CoreRegistryActive = "Command Line Logging via Registry ist bereits aktiv"
        CoreAuditpolExecError = "Fehler beim Ausfuehren von auditpol.exe: {0}"
        CoreSecretSpillWarning = "ACHTUNG: Secret-Spill-Risiko in Logs evaluieren!"
        CoreCommandLinesSecrets = "Command-Lines koennen Passwoerter, API-Keys, Tokens enthalten!"
        
        # Core Module - IE11
        CoreIE11Disable = "IE11 COM-Automation deaktivieren"
        CoreIE11Disabled = "IE11/MSHTML/ActiveX deaktiviert"
        
        # Core Module - Print Spooler
        CorePrintSpooler = "Print Spooler User Rights"
        CorePrintImpersonate = "Setze 'Impersonate client' fuer PrintSpoolerService..."
        CoreTempNotSet = "TEMP-Umgebungsvariable nicht gesetzt!"
        CoreSeceditNotFound = "secedit.exe nicht gefunden: {0}"
        CorePrintAdded = "PrintSpoolerService zu 'Impersonate client' hinzugefuegt (WPP)"
        CoreSeceditFailed = "secedit.exe fehlgeschlagen: Exit Code {0}"
        CoreUserRightsError = "Fehler bei User Rights Assignment: {0}"
        CorePrintRPCHarden = "Haerte Print Spooler RPC (PrintNightmare-Mitigation)..."
        CorePrintNightmare = "Print Spooler RPC-Haertung (PrintNightmare CVE-2021-1675 Mitigation)"
        
        # Core Module - Defender Baseline
        CoreDefenderBaseline = "Microsoft Defender Baseline"
        CoreDefenderNotAvailable = "Windows Defender ist NICHT verfuegbar!"
        CoreDefenderThirdParty = "GRUND: Drittanbieter-Antivirus erkannt (BitDefender, Norton, Kaspersky, etc.)"
        CoreDefenderAutoDisabled = "Windows Defender wird automatisch deaktiviert wenn Drittanbieter-AV aktiv ist."
        CoreDefenderSkipped = "DEFENDER-KONFIGURATION WIRD UEBERSPRUNGEN!"
        CoreDefenderThirdPartyProtection = "Ihr Drittanbieter-Antivirus bietet bereits Schutz."
        CoreDefenderStarting = "Defender Service wird gestartet (erforderlich fuer Konfiguration)..."
        CoreDefenderStartFailed = "Defender Service konnte nicht gestartet werden: {0}"
        CoreDefenderConfigSkipped = "Defender-Konfiguration wird uebersprungen (Drittanbieter-AV aktiv?)"
        CorePUARegistry = "PUA wird via Registry-Checkboxen aktiviert (funktioniert ohne Service)"
        CorePUACheckboxes = "Setze PUA Checkboxen (mit TrustedInstaller Ownership-Management)..."
        CorePUAActivated = "PUA Checkbox aktiviert: Apps blockieren (Downloads blockieren wird im Edge-Modul konfiguriert)"
        CorePUAScriptFailed = "PUA Checkboxen konnten nicht per Script gesetzt werden (TrustedInstaller-Protected)"
        CorePUAFunctional = "Set-MpPreference ist bereits aktiv - PUA-Funktionalitaet ist gegeben"
        CorePUAManual = "OPTIONAL: Checkboxen manuell aktivieren in: Windows Security | Virus and threat protection |"
        CorePUAManualPath = "          Virus and threat protection settings | Potentially unwanted app blocking"
        CoreDefender6Settings = "Aktiviere 6 Defender-Settings (Baseline 25H2)..."
        CoreDefender6Activated = "6 Defender-Settings aktiviert (Microsoft Baseline 25H2)"
        CoreDefenderActive = "Defender Baseline-Settings aktiv"
        
        # Core Module - Controlled Folder Access
        CoreCFATitle = "Controlled Folder Access (Ransomware-Schutz)"
        CoreCFAThirdParty = "Windows Defender ist NICHT verfuegbar (Drittanbieter-AV aktiv)"
        CoreCFASkipped = "Controlled Folder Access uebersprungen - Ihr AV bietet bereits Schutz"
        CoreCFAStarting = "Defender Service wird gestartet..."
        CoreCFAServiceFailed = "Defender Service nicht verfuegbar - Controlled Folder Access uebersprungen"
        CoreCFAActivated = "Controlled Folder Access aktiviert"
        CoreCFAProtected = "Geschuetzt: Dokumente, Bilder, Videos, Desktop"
        CoreCFAWhitelist = "WICHTIG: Legitime Anwendungen muessen ggf. zur Whitelist hinzugefuegt werden"
        CoreCFANotActivated = "Controlled Folder Access Status: Nicht aktiviert"
        CoreCFAVerifyFailed = "Controlled Folder Access Status konnte nicht verifiziert werden"
        CoreCFADefenderUnavailable = "Moeglicherweise Drittanbieter-AV aktiv oder Defender nicht vollstaendig verfuegbar"
        CoreCFARegistry = "Controlled Folder Access aktiviert (Registry)"
        CoreCFAEnableFailed = "Controlled Folder Access konnte nicht aktiviert werden: {0}"
        CoreCFAManual = "Manuell aktivieren: Windows Security | Ransomware Protection"
        
        # Core Module - Exploit Protection
        CoreExploitTitle = "Exploit Protection EXTENDED (Maximum Security)"
        CoreExploitConfiguring = "Konfiguriere ALLE Exploit Mitigations..."
        CoreExploitActivated = "Exploit Protection EXTENDED aktiviert!"
        CoreExploitDEP = "  - DEP (Data Execution Prevention)"
        CoreExploitSEHOP = "  - SEHOP (Structured Exception Handler Overwrite Protection)"
        CoreExploitASLR = "  - ASLR (Mandatory + Bottom-up + High Entropy 64-bit)"
        CoreExploitCFG = "  - CFG Strict Mode + Export Suppression (Anti-ROP)"
        CoreExploitHeap = "  - Heap Protection (Terminate on Corruption)"
        CoreExploitImageLoad = "  - Image Load Protection (Block Remote + Low Integrity)"
        CoreExploitExtension = "  - Extension Points Disabled (Legacy COM)"
        CoreExploitResistance = "ERWEITERTE MITIGATIONS: +8% Exploit Resistance vs. Standard"
        CoreExploitFailed = "Exploit Protection konnte nicht vollstaendig konfiguriert werden: {0}"
        CoreExploitManual = "Manuell pruefen: Windows Security | App and browser control | Exploit protection"
        
        # Core Module - Services
        CoreServicesTitle = "Unnoetige Services deaktivieren (Maximum Hardening)"
        CoreServicesWLANActive = "WLAN bleibt AKTIV (WlanSvc) - aber Network Discovery wird deaktiviert!"
        CoreServicesDisabling = "Deaktiviere {0} Services..."
        CoreServicesDisabled = "{0} deaktiviert"
        CoreServicesProtected = "{0} konnte nicht deaktiviert werden (eventuell geschuetzt)"
        CoreServicesNotFound = "{0} nicht gefunden (bereits entfernt oder nicht installiert)"
        CoreServicesResult = "{0} Services deaktiviert, {1} nicht gefunden"
        
        # Core Module - Administrative Shares
        CoreAdminSharesTitle = "Administrative Shares deaktivieren (C$, ADMIN$, IPC$)"
        CoreAdminSharesDisabling = "Administrative Shares werden PERMANENT deaktiviert..."
        CoreAdminSharesDisabled = "Administrative Shares deaktiviert (C$, ADMIN$, etc.)"
        CoreAdminSharesIPCWarning = "IPC$ Share kann NICHT deaktiviert werden (benoetigt fuer Named Pipes)"
        CoreAdminSharesRebootNote = "HINWEIS: Neustart erforderlich fuer volle Wirkung der Share-Deaktivierung"
        CoreAdminSharesIPCHardening = "IPC$ wird gehaertet (Restrict Anonymous Access)..."
        CoreAdminSharesIPCHardened = "IPC$ gehaertet (Anonymous Access stark eingeschraenkt)"
        CoreAdminSharesIPCNote = "IPC$ bleibt aktiv (benoetigt fuer Windows-intern), aber ohne Anonymous Access!"
        
        # Core Module - Administrator Account
        CoreAdminAccountTitle = "Built-in Administrator Account haerten"
        CoreAdminAccountRenaming = "Administrator Account wird umbenannt und deaktiviert..."
        CoreAdminAccountNotFound = "Built-in Administrator Account nicht gefunden"
        CoreAdminAccountRenamed = "Administrator umbenannt: '{0}' zu '{1}'"
        CoreAdminAccountRenameError = "Fehler beim Umbenennen: {0}"
        CoreAdminAccountPasswordGenerating = "Generiere kryptographisch sicheres 64-Zeichen-Passwort..."
        CoreAdminAccountPasswordSet = "Administrator Passwort auf 64-Zeichen-Kryptographisch-Sicher gesetzt"
        CoreAdminAccountPasswordError = "Fehler beim Setzen des Passworts: {0}"
        CoreAdminAccountDisabled = "Administrator Account DEAKTIVIERT (CIS Best Practice)"
        CoreAdminAccountDisableError = "Fehler beim Deaktivieren: {0}"
        CoreAdminAccountWarning1 = "==========================================================="
        CoreAdminAccountWarning2 = "WICHTIG: Das Passwort wurde NICHT gespeichert!"
        CoreAdminAccountWarning3 = "Dies ist ein Security Best Practice - NIEMALS Klartext!"
        CoreAdminAccountSolutions = "EMPFOHLENE LOESUNGEN fuer Administrator-Zugriff:"
        CoreAdminAccountLAPS = "  1. LAPS (Local Administrator Password Solution)"
        CoreAdminAccountEntra = "  2. Microsoft Entra ID (Azure AD) Join"
        CoreAdminAccountJIT = "  3. Separate Admin-Accounts mit Just-In-Time Access"
        CoreAdminAccountWarning4 = "Der Built-in Administrator ist jetzt DEAKTIVIERT und hat"
        CoreAdminAccountWarning5 = "ein unbekanntes 64-Zeichen-Passwort (RandomNumberGenerator)."
        CoreAdminAccountGuestHardening = "Haerte Guest Account..."
        CoreAdminAccountGuestDisabled = "Guest Account wurde deaktiviert"
        CoreAdminAccountGuestRenamed = "Guest Account umbenannt: '{0}' zu '{1}' + deaktiviert"
        CoreAdminAccountGuestNotFound = "Guest Account nicht gefunden (bereits entfernt oder nicht vorhanden)"
        CoreAdminAccountGuestError = "Guest Account Umbenennung fehlgeschlagen (nicht kritisch): {0}"
        CoreAdminAccountGuestNote = "Hinweis: Guest Account ist bereits deaktiviert (Windows Standard)"
        CoreAdminAccountError = "Fehler beim Haerten des Administrator Accounts: {0}"

        # Core Module - DNS over HTTPS
        CoreDNSTitle = "Cloudflare DNS over HTTPS (DoH) konfigurieren"
        CoreDNSWarning = "ACHTUNG: DNS wird auf Cloudflare 1.1.1.1 gesetzt!"
        CoreDNSCorporate = "Corporate Networks: Verwenden Sie stattdessen Ihre internen DNS-Server"
        CoreDNSAlternatives = "Alternative DNS: Quad9 (9.9.9.9), Google (8.8.8.8)"
        CoreDNSSwitching = "DNS wird auf Cloudflare 1.1.1.1 mit DoH umgestellt..."
        CoreDNSStep1 = "Schritt 1: Registriere DoH-Server (Cloudflare IPv4 + IPv6)..."
        CoreDNSRegistered = "DoH-Server registriert: 4 Cloudflare-Server (IPv4 + IPv6)"
        CoreDNSStep2 = "Schritt 2: Aktiviere DoH global..."
        CoreDNSGlobalActivated = "DoH global aktiviert"
        CoreDNSGlobalError = "DoH global konnte nicht aktiviert werden: {0}"
        CoreDNSAdapters = "DNS wird auf Netzwerkadaptern auf Cloudflare umgestellt (VPN-Adapter werden uebersprungen)..."
        CoreDNSVPNSkipped = "VPN-Adapter uebersprungen: '{0}' ({1})"
        CoreDNSVPNKeepDNS = "Uebersprungene VPN-Adapter: {0}"
        CoreDNSVPNNote = "VPN-Adapter behalten ihre eigenen DNS-Server (wichtig fuer VPN-Funktionalitaet!)"
        CoreDNSNoAdapters = "Keine Netzwerkadapter gefunden (alle sind VPN oder Down)"
        CoreDNSSkipped = "DNS-Konfiguration wird uebersprungen!"
        CoreDNSConfiguring = "Konfiguriere DNS auf {0} Adapter(n) (ohne VPN)"
        CoreDNSStep3 = "Schritt 3: Konfiguriere DNS auf Adapter '{0}'..."
        CoreDNSIPv6Wait = "Warte 5 Sekunden fuer IPv6 DoH-Validierung..."
        CoreDNSAdapterIPv6 = "DNS auf Adapter '{0}': IPv4 + IPv6 mit DoH konfiguriert"
        CoreDNSAdapterIPv4 = "DNS auf Adapter '{0}': IPv4 mit DoH konfiguriert"
        CoreDNSAdapterError = "Fehler beim Setzen von DNS auf Adapter '{0}': {1}"
        CoreDNSAdapterResult = "{0} Adapter konfiguriert"
        CoreDNSNetworkError = "Fehler beim Abrufen der Netzwerkadapter: {0}"
        CoreDNSCacheFlushing = "DNS-Cache wird geleert..."
        CoreDNSCacheFlushed = "DNS Cache geleert"
        CoreDNSCacheTimeout = "DNS Cache Flush Timeout (10s) - wird uebersprungen"
        CoreDNSCacheReboot = "DNS Cache wird beim naechsten Neustart automatisch geleert"
        CoreDNSActivation = "DoH wird beim naechsten Neustart/DNS-Request aktiviert"
        CoreDNSValidating = "Validiere DoH-Konfiguration..."
        CoreDNSValidated = "DoH-Validierung: {0} Cloudflare DoH Server konfiguriert"
        CoreDNSValidationFailed = "VALIDIERUNG FEHLGESCHLAGEN: Keine Cloudflare DoH Server gefunden!"
        CoreDNSUnencrypted = "DNS koennte UNVERSCHLUESSELT sein!"
        CoreDNSValidationNoData = "VALIDIERUNG FEHLGESCHLAGEN: Get-DnsClientDohServerAddress gab keine Daten zurueck!"
        CoreDNSValidationReasons = "Moegliche Ursachen:"
        CoreDNSValidationOldWindows = "  - DoH Cmdlets nicht verfuegbar (Windows zu alt?)"
        CoreDNSValidationNotActive = "  - DoH noch nicht aktiv (Neustart erforderlich?)"
        CoreDNSActivated = "Cloudflare DNS over HTTPS aktiviert"
        CoreDNSIPv4Info = "IPv4: 1.1.1.1 (Primary), 1.0.0.1 (Secondary)"
        CoreDNSIPv6Info = "IPv6: 2606:4700:4700::1111 (Primary), 2606:4700:4700::1001 (Secondary)"
        CoreDNSRebootWarning = "WICHTIG: Neustart koennte erforderlich sein damit DoH aktiv wird!"
        CoreDNSTest = "Test: nslookup cloudflare.com"
        CoreDNSVPNNotModified = "HINWEIS: VPN-Adapter wurden NICHT geaendert!"
        CoreDNSVPNKeep = "  VPN-Verbindungen verwenden weiterhin ihre eigenen DNS-Server"
        CoreDNSVPNCorrect = "  Dies ist KORREKT und WICHTIG fuer VPN-Funktionalitaet!"
        
        # Core Module - Remote Access
        CoreRemoteTitle = "Remote Access KOMPLETT deaktivieren (Hard Mode)"
        CoreRemoteRDPDisabling = "RDP wird PERMANENT DEAKTIVIERT..."
        CoreRemoteRDPDisabled = "RDP Services permanent deaktiviert (TermService, UmRdpService)"
        CoreRemoteRDPPartial = "Nur {0} von {1} RDP Services deaktiviert"
        CoreRemoteRDPFailed = "RDP Services konnten nicht deaktiviert werden"
        CoreRemoteRDPFirewall = "RDP Firewall-Regeln HART deaktiviert + Block-Regel aktiv"
        CoreRemoteRDPFirewallError = "RDP Firewall-Regeln Fehler: {0}"
        CoreRemoteRegDisabling = "Remote Registry wird deaktiviert..."
        CoreRemoteRegDisabled = "Remote Registry Service deaktiviert"
        CoreRemoteRegFailed = "Remote Registry konnte nicht deaktiviert werden"
        CoreRemoteRADisabling = "Remote Assistance wird deaktiviert..."
        CoreRemoteRADisabled = "Remote Assistance deaktiviert (alle Varianten)"
        CoreRemoteWinRMDisabling = "WinRM (PowerShell Remoting) wird deaktiviert..."
        CoreRemoteWinRMDisabled = "WinRM Service deaktiviert (PowerShell Remoting AUS)"
        CoreRemoteWinRMFailed = "WinRM konnte nicht deaktiviert werden"
        CoreRemoteWinRMFirewall = "WinRM Firewall-Regeln deaktiviert"
        CoreRemoteWinRMFirewallError = "WinRM Firewall-Regeln Fehler: {0}"
        CoreRemoteComplete = "Remote Access 100% DEAKTIVIERT (RDP=AUS + RemoteReg=AUS + RA=AUS + WinRM=AUS)"
        CoreRemoteWarning = "KEIN Remote-Zugriff moeglich! Nur physischer Zugriff oder Intune/SCCM!"
        
        # Core Module - Sudo
        CoreSudoTitle = "Sudo for Windows deaktivieren"
        CoreSudoDisabled = "Sudo for Windows deaktiviert (Microsoft Baseline 25H2)"
        CoreSudoNote = "Sudo ist ein potentieller Privilege Escalation Vector"
        
        # Core Module - Kerberos
        CoreKerberosTitle = "Kerberos PKINIT Hash-Agilitaet (SHA-2 Only)"
        CoreKerberosConfigured = "Kerberos PKINIT Hash-Agilitaet: SHA-256/384/512 (SHA-1 DEAKTIVIERT)"
        CoreKerberosBaseline = "Microsoft Baseline 25H2: SHA-1 wird NICHT unterstuetzt"
        CoreKerberosKDC = "Hinweis: Windows Server 2025 KDC empfohlen fuer volle Funktionalitaet"
        
        # Core Module - Mark-of-the-Web
        CoreMOTWTitle = "Mark-of-the-Web"
        CoreMOTWActivated = "Mark-of-the-Web aktiv"
        
        # Advanced Module
        AdvancedLAPSNotAvailable = "Windows LAPS nicht verfuegbar auf dieser Edition/Version"
        AdvancedLAPSSkipped = "LAPS wird uebersprungen (nur Pro/Enterprise/Education)"
        AdvancedLAPSHint = "Hinweis: Verwenden Sie Microsoft LAPS fuer Home/Pro oder Legacy LAPS"
        AdvancedLAPSConfigured = "Windows LAPS konfiguriert (30-Tage-Rotation, 20 Zeichen, Entra/AD-Escrow)"
        AdvancedLAPSModule = "LAPS PowerShell Module: Install-Module -Name LAPS"
        AdvancedAuditSetting = "Setze erweiterte Audit-Policies..."
        AdvancedAuditPoliciesFailed = "Audit Policies konnten nicht gesetzt werden - moeglicherweise Locale-Problem"
        AdvancedAuditPoliciesGPO = "Audit Policies werden via GPO oder Registry-Alternative gesetzt"
        AdvancedAuditTranscriptError = "Konnte PSTranscripts-Verzeichnis nicht erstellen: {0}"
        AdvancedAuditActivated = "Advanced Auditing aktiviert (Object Access, Logon, DS, Policy, PnP, PS-Logging)"
        AdvancedAuditLogSizes = "Event Log Groessen: Security=500MB, System/App=100MB, PS=50MB"
        AdvancedNTLMActivating = "NTLM Auditing wird aktiviert (Microsoft Baseline 25H2)..."
        AdvancedNTLMActivated = "NTLM Auditing aktiviert (Audit-Only, kein Blocking)"
        AdvancedNTLMEventIDs = "Event IDs: 4624 (NTLM Logon), 8004 (NTLM Auth), 8002 (NTLM Blocked)"
        AdvancedNTLMGoal = "Ziel: Legacy-NTLM-Nutzung erkennen fuer Migration zu Kerberos"
        AdvancedNTLMNotBlocked = "NTLM wird NICHT blockiert - nur geloggt! (Best Practice fuer Kompatibilitaet)"
        AdvancedTLSSHA1Warning = "SHA-1 wird fuer TLS/SSL deaktiviert (SCHANNEL) - Legacy-Webseiten koennen betroffen sein"
        AdvancedTLSCodeSigningOK = "Code-Signing mit SHA-1 bleibt ERLAUBT (Legacy-Software-Kompatibilitaet)"
        AdvancedTLSSHA1Scope = "SHA-1 Scope: NUR TLS/SSL blockiert - Code-Signing/VPN/Legacy-Apps funktionieren!"
        AdvancedTLSLegacyWebsites = "Bei Problemen mit Legacy-Webseiten: SHA-1 manuell wieder aktivieren"
        AdvancedTLSCompleted = "TLS/SSL Haertung abgeschlossen (TLS 1.2+1.3, GCM/CHACHA only, SHA-2, keine CBC/RC4/3DES/MD5)"
        AdvancedTLSEventLogging = "Schannel Event Logging aktiviert (Level 7)"
        AdvancedPrintAdding = "Fuege RESTRICTED SERVICES\\PrintSpoolerService zu User Rights hinzu..."
        AdvancedPrintExportFailed = "Security Policy Export fehlgeschlagen"
        AdvancedPrintNotCritical = "NICHT KRITISCH: Windows Protected Print funktioniert trotzdem"
        AdvancedPrintNotFound = "SeImpersonatePrivilege nicht gefunden in Security Policy"
        AdvancedPrintDefaultsKept = "NICHT KRITISCH: Standardwerte bleiben erhalten"
        AdvancedPrintAlreadyPresent = "Print Spooler Service User Right bereits vorhanden"
        AdvancedPrintAdded = "Print Spooler User Right hinzugefuegt"
        AdvancedPrintUserRight = "  - User Right: SeImpersonatePrivilege"
        AdvancedPrintSIDAdded = "  - SID Added: S-1-5-99-0-0-0-0 (RESTRICTED SERVICES\\PrintSpoolerService)"
        AdvancedPrintPurpose = "  - Purpose: Windows Protected Print Support (Forward-Compat)"
        AdvancedPrintBaseline = "MICROSOFT BASELINE 25H2: 100% ERFUELLT!"
        AdvancedPrintImportFailed = "Security Policy Import fehlgeschlagen (Exit Code: {0})"
        AdvancedPrintPrintingWorks = "NICHT KRITISCH: Drucken funktioniert trotzdem"
        AdvancedPrintAssignmentFailed = "User Right Assignment fehlgeschlagen: {0}"
        AdvancedPrintStandardPerms = "NICHT KRITISCH: Windows Protected Print funktioniert mit Standard-Permissions"
        
        # Edge Module
        EdgeBaselineTitle = "Microsoft Edge Security Baseline v139+ (User-Friendly)"
        EdgeSmartScreenConfig = "Konfiguriere SmartScreen und Site Isolation..."
        EdgeTrackingConfig = "Konfiguriere Tracking Prevention (Strict)..."
        EdgeDNSConfig = "Konfiguriere DNS over HTTPS..."
        EdgeEnhancedSecurityConfig = "Konfiguriere Enhanced Security Mode (Balanced)..."
        EdgeExtensionsConfig = "Konfiguriere Erweiterungs-Policies (User-Friendly)..."
        EdgeExtensionsAllowed = "Erweiterungen aus Microsoft Edge Store sind ERLAUBT"
        EdgeTLSConfig = "Konfiguriere TLS/SSL Security..."
        EdgeTLSDefault = "TLS 1.2+ ist standardmaessig aktiviert (Edge v98+)"
        EdgeAutoFillConfig = "Konfiguriere AutoFill und Password Manager (Default: Aktiviert)..."
        EdgeAutoFillDefault = "AutoFill und Password Manager sind als DEFAULT aktiviert (User KANN aendern!)"
        EdgeWebRTCConfig = "Konfiguriere WebRTC IP-Leak Prevention..."
        EdgeInPrivateConfig = "Konfiguriere InPrivate Mode..."
        EdgeBaselineApplied = "Microsoft Edge Security Baseline v139+ angewendet (HYBRID Mode)"
        EdgeConfiguration = "KONFIGURATION (Hybrid: Policies + Preferences):"
        EdgePoliciesGreyed = "  POLICIES (AUSGEGRAUT - User kann NICHT aendern):"
        EdgeSmartScreenActive = "  [OK] SmartScreen: Aktiv (nicht umgehbar)"
        EdgeTrackingBalanced = "  [OK] Tracking Prevention: Balanced"
        EdgeDNSAutomatic = "  [OK] DNS over HTTPS: Automatic"
        EdgeSecurityBasic = "  [OK] Enhanced Security: Basic"
        EdgeTLSStandard = "  [OK] TLS: 1.2+ Standard (Edge v98+)"
        EdgeSiteIsolation = "  [OK] Site Isolation: Aktiviert"
        EdgeExtensionsMSOnly = "  [OK] Erweiterungen: Nur Microsoft Store"
        EdgePreferencesChangeable = "  PREFERENCES (DEFAULT - User KANN aendern!):"
        EdgeAutoFillAddress = "  [~] AutoFill Address: Default AN"
        EdgeAutoFillCard = "  [~] AutoFill Credit Card: Default AN"
        EdgePasswordManager = "  [~] Password Manager: Default AN"
        EdgePaymentMethods = "  [~] Payment Methods: Default AN"
        EdgeInPrivateAvailable = "  [~] InPrivate Mode: Default VERFUEGBAR"
        EdgeQUIC = "  [~] QUIC/HTTP3: Default AN"
        EdgeWebRTCDefault = "  [~] WebRTC IP-Leak Prevention: Default AN"
        EdgeHybridMode = "  HYBRID-MODUS = Best of Both Worlds:"
        EdgeSecurityEnforced = "  [OK] Security-kritische Settings: ERZWUNGEN (Policies)"
        EdgeUserFriendly = "  [OK] User-Friendly Settings: STANDARD aber AENDERBAR (Preferences)"
        EdgeRestartRequired = "Edge-Neustart erforderlich fuer vollstaendige Anwendung!"
        
        # WirelessDisplay Module
        WDDisableTitle = "Wireless Display / Miracast KOMPLETT deaktivieren (4 Ebenen)"
        WDDisableAllLevels = "Deaktiviere auf ALLEN Ebenen: Services, Registry, Firewall, Apps..."
        WDLevel1Services = "Ebene 1/4: Services deaktivieren..."
        WDLevel2Registry = "Ebene 2/4: Registry haerten..."
        WDLevel3Firewall = "Ebene 3/4: Firewall-Regeln blockieren..."
        WDLevel4Apps = "Ebene 4/4: Wireless Display Apps entfernen..."
        WDCompletelyDisabled = "Wireless Display KOMPLETT deaktiviert auf ALLEN 4 Ebenen:"
        WDLevel1Done = "  [OK] Ebene 1: Services gestoppt"
        WDLevel2Done = "  [OK] Ebene 2: Registry gehaertet"
        WDLevel3Done = "  [OK] Ebene 3: Firewall blockiert"
        WDLevel4Done = "  [OK] Ebene 4: Apps entfernt"
        WDMiracastNotWorking = "Miracast / Cast zu Smart TV funktioniert NICHT MEHR!"
        WDQuickSettingsNote = "HINWEIS: 'Wiedergeben'-Button bleibt in Quick Settings (manuell entfernen: Windows-Taste + A | Bearbeiten)"
        WDClickHarmless = "Klick auf Button ist harmlos - Services sind deaktiviert, Feature funktioniert nicht"
        
        # WindowsUpdate Module
        WUDefaultsTitle = "Windows Update - Empfohlene Defaults (HYBRID)"
        WUDefaultsSet = "Windows Update Defaults gesetzt (HYBRID)"
        WUConfiguration = "Konfiguration:"
        WUOtherMSProducts = "  [+] Updates fuer andere MS-Produkte: EIN (User kann aendern)"
        WUGetLatestUpdates = "  [+] Sich auf aktuellen Stand bringen: EIN (User kann aendern)"
        WUMeteredConnections = "  [+] Updates ueber getaktete Verbindungen: EIN (Security First!)"
        WURestartNotifications = "  [+] Neustart-Benachrichtigungen: EIN (User kann aendern)"
        WULatestUpdatesImmediately = "  [+] Neueste Updates sofort: EIN (User kann aendern)"
        WUPreviewBuilds = "  [!] Preview Builds: AUS (Policy = GARANTIERT!)"
        WUHybridMode = "HYBRID-MODUS:"
        WUUserPreferences = "  [OK] User-Preferences = Toggle funktionieren!"
        WUPoliciesCritical = "  [OK] Policies fuer kritische Settings (Preview Builds)"
        WUBestOfBoth = "  [OK] Best of Both Worlds!"
        DOHTTPOnlyTitle = "Delivery Optimization - HTTP-Only (HYBRID)"
        DOHTTPOnlySet = "Delivery Optimization: HTTP-Only Mode (HYBRID)"
        DOGuaranteed = "GARANTIERT: Updates kommen NUR von Microsoft-Servern (HTTP)"
        DONoPeerToPeer = "KEIN P2P-Sharing, KEIN LAN-Scanning"
        DOHybridMode = "HYBRID-MODUS:"
        DOPolicySet = "  [OK] Policy gesetzt = GARANTIERT dass Setting greift"
        DOConfigSet = "  [OK] Config gesetzt = Toggle-Unterstuetzung"
        DOUserCanChange = "User kann aendern durch:"
        DOChangeToggle = "  1. In Settings Toggle aendern (entfernt Policy automatisch)"
        DODeletePolicy = "  2. Oder Policy manuell loeschen via Registry:"
        DODeleteCommand = "     Remove-ItemProperty -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DeliveryOptimization -Name DODownloadMode"
        
        # UAC Module
        UACMaximumSecurityTitle = "UAC Maximum Security (Immer benachrichtigen)"
        UACMaximumSet = "UAC auf MAXIMUM gesetzt (Immer benachrichtigen)"
        UACSliderPosition = "Slider Position: Ganz oben (Position 1 von 4)"
        UACEveryActionRequires = "Jede Admin-Aktion erfordert Bestaetigung auf Secure Desktop!"
        UACMostSecureSetting = "Dies ist die sicherste Einstellung - aber kann laestig sein bei vielen Admin-Tasks!"
        UACEPPUpcomingFeature = "HINWEIS: Enhanced Privilege Protection ist ein KOMMENDES Feature!"
        UACEPPAnnouncedBaseline = "Microsoft hat diese Settings in der Baseline 25H2 angekuendigt,"
        UACEPPNotYetActive = "aber das Feature ist noch NICHT aktiv in Windows 11 25H2."
        UACEPPSettingAnyway = "Wir setzen die Registry-Keys TROTZDEM (fuer zukuenftige Windows Updates)..."
        UACEPPSettingsSet = "Enhanced Privilege Protection Mode Settings gesetzt"
        UACEPPNotActiveYet = "WICHTIG: Feature ist NOCH NICHT aktiv - wird in zukuenftigen Updates aktiviert!"
        UACEPPFutureProof = "Diese Settings sind 'Future-Proof' - bereit fuer kommende Windows Updates"
        
        # OneDrive Module
        OneDriveHardeningStart = "OneDrive wird fuer Maximum Privacy gehaertet..."
        OneDriveFunctionalityPreserved = "Funktionalitaet bleibt erhalten - User hat KONTROLLE ueber Uploads"
        OneDriveTutorialDisabled = "OneDrive Tutorial deaktivieren (Privacy)"
        OneDriveTutorialDisabledDefault = "OneDrive Tutorial deaktivieren (Privacy) - Default fuer neue User"
        OneDriveFeedbackDisabled = "OneDrive Feedback an Microsoft deaktivieren (Privacy)"
        OneDriveFeedbackDisabledDefault = "OneDrive Feedback an Microsoft deaktivieren (Privacy) - Default fuer neue User"
        OneDriveNoConnectWithoutConsent = "OneDrive darf nicht ohne User-Consent connecten (Privacy)"
        OneDriveNoConnectWithoutConsentDefault = "OneDrive darf nicht ohne User-Consent connecten (Privacy) - Default fuer neue User"
        OneDriveBlockAutoUpload = "Auto-Upload von Desktop/Dokumente/Bilder blockieren (Privacy)"
        OneDriveBlockAutoUploadDefault = "Auto-Upload von Desktop/Dokumente/Bilder blockieren (Privacy) - Default fuer neue User"
        OneDriveHardeningDone = "OneDrive Privacy Hardening: DONE"
        OneDrivePrivacyStatus = "OneDrive Privacy Status:"
        OneDriveTutorialStatus = "  [OK] Tutorial deaktiviert (kein Tracking beim ersten Start)"
        OneDriveFeedbackStatus = "  [OK] Feedback deaktiviert (keine Data-Leaks via Bug-Reports)"
        OneDriveNetworkStatus = "  [OK] Kein Network Traffic vor User-Login (kein Silent-Tracking)"
        OneDriveKFMStatus = "  [OK] Known Folder Move blockiert (kein Auto-Upload)"
        OneDriveDiagnosticStatus = "  [OK] Optional Diagnostic Data deaktiviert (via Telemetry-Modul)"
        OneDriveFunctionality = "OneDrive Funktionalitaet:"
        OneDriveWorksNormally = "  [OK] OneDrive funktioniert normal (Sync/Upload/Download)"
        OneDrivePersonalActive = "  [OK] Personal OneDrive aktiv (kein Breaking fuer Home-User)"
        OneDriveKFMOff = "  [!] Auto-Backup (KFM) ist AUS - User muss Dateien manuell hochladen"
        OneDriveUserControl = "  [!] User hat KONTROLLE was in die Cloud hochgeladen wird (Privacy-First!)"
        
        # Backup Script
        BackupBanner = "BACKUP - Windows 11 Security Baseline Einstellungen"
        BackupCreating = "Erstelle vollstaendiges Backup..."
        BackupDirCreated = "Backup-Verzeichnis erstellt:"
        BackupCheckOld = "Pruefe alte Backups..."
        BackupDeleteOld = "Loesche {0} alte Backups (aelter als die letzten 30)..."
        BackupDeleted = "alte Backups geloescht"
        BackupNoOld = "Keine alten Backups zum Loeschen (max. 30 werden behalten)"
        BackupDNS = "DNS Settings werden gesichert..."
        BackupDNSAdapter = "DNS von Adapter '{0}':"
        BackupDNSSaved = "DNS Settings gesichert ({0} Adapter)"
        BackupHosts = "Hosts-Datei wird gesichert..."
        BackupHostsSaved = "Hosts-Datei gesichert ({0} Zeilen)"
        BackupApps = "Installierte Apps werden gesichert..."
        BackupAppsUser = "User Apps gesichert"
        BackupAppsProvisioned = "Sichere Provisioned Packages (fuer Wiederherstellung)..."
        BackupAppsProvisionedSaved = "Provisioned Packages gesichert"
        BackupServices = "Service Start-Types werden gesichert..."
        BackupServicesSaved = "Services gesichert (ALLE!)"
        BackupServicesNote = "Dadurch koennen wir 100% wiederherstellen"
        BackupFirewall = "Firewall-Regeln werden gesichert..."
        BackupFirewallSaved = "Firewall-Regeln gesichert (ALLE!)"
        BackupFirewallNote = "Inkl. Status aller Standard-Regeln (aktiviert/deaktiviert)"
        BackupUsers = "User Accounts werden gesichert..."
        BackupUsersSaved = "User Accounts gesichert"
        BackupUsersWarning = "HINWEIS: Passwoerter koennen NICHT gesichert werden!"
        BackupUsersPasswordNote = "Beim Restore wird ein NEUES Passwort gesetzt (wird angezeigt)"
        BackupRegistry = "Wichtige Registry-Keys werden gesichert..."
        BackupRegistrySaved = "Registry-Keys gesichert"
        BackupSystem = "System-Informationen werden gesichert..."
        BackupSystemSaved = "System-Informationen gesichert"
        BackupSaving = "Speichere Backup..."
        BackupSuccess = "Backup erfolgreich erstellt!"
        BackupCompleted = "BACKUP ERFOLGREICH ABGESCHLOSSEN"
        BackupFile = "Backup-Datei:"
        BackupSize = "Groesse:"
        BackupSavedItems = "Gesichert:"
        BackupNote = "Dieses Backup kann wiederhergestellt werden, indem Sie das Skript erneut ausfuehren und 'Restore' im Hauptmenue waehlen."
        
        # Backup - Zusaetzliche Meldungen
        BackupTargetTitle = "BACKUP-ZIEL"
        BackupTargetPath = "Pfad: {0}"
        BackupTargetDir = "Verzeichnis: {0}"
        BackupDurationTitle = "Erwartete Dauer:"
        BackupDurationNormal = "    Normal: 2-3 Minuten"
        BackupDurationMax = "    Maximum: 6 Minuten (auf langsamen Systemen)"
        BackupCheckingDiskSpace = "Pruefe verfuegbaren Festplattenspeicher..."
        BackupDiskDrive = "  Laufwerk: {0}:"
        BackupDiskFree = "  Frei: {0} GB"
        BackupDiskInsufficientTitle = "Ungenuegender Festplattenspeicher!"
        BackupDiskRequired = "  Benoetigt: Mindestens {0} GB"
        BackupDiskAvailable = "  Verfuegbar: {0} GB"
        BackupDiskInsufficientError = "Ungenuegender Festplattenspeicher fuer Backup"
        BackupDiskSufficient = "  [OK] Ausreichend Festplattenspeicher verfuegbar"
        BackupOriginalKept = "    [!] Original-Backup bleibt erhalten: {0}"
        BackupAppsReading = "  [i] Lese installierte Apps (max 60s)..."
        BackupAppsTimeout = "AppX-Package Enumeration Timeout (60s) - ueberspringe Apps"
        BackupAppsFailed = "AppX-Package Backup fehlgeschlagen: {0}"
        BackupProvisionedReading = "  [i] Lese Provisioned Packages (max 90s)..."
        BackupProvisionedTimeout = "Provisioned Packages Timeout (90s) - ueberspringe"
        BackupProvisionedFailed = "Provisioned Packages konnten nicht gesichert werden: {0}"
        BackupScheduledTasks = "Backup Scheduled Tasks..."
        BackupScheduledTasksSaved = "{0} Scheduled Tasks gesichert"
        BackupScheduledTasksNote = "    HINWEIS: Nur State (Enabled/Disabled/Ready) wird gebackupt"
        BackupASRTitle = "Backup ASR Rules..."
        BackupASRSaved = "{0} ASR Rules gesichert"
        BackupASRNotFound = "Keine ASR Rules gefunden (Defender nicht konfiguriert)"
        BackupASRFailed = "ASR Rules Backup fehlgeschlagen: {0}"
        BackupExploitTitle = "Backup Exploit Protection..."
        BackupExploitSaved = "Exploit Protection Einstellungen gesichert"
        BackupExploitNotConfigured = "Exploit Protection nicht konfiguriert"
        BackupExploitNotAvailable = "Get-ProcessMitigation nicht verfuegbar (Windows 10 1709+ erforderlich)"
        BackupExploitFailed = "Exploit Protection Backup fehlgeschlagen: {0}"
        BackupDohTitle = "Backup DoH Configuration..."
        BackupDohSaved = "{0} DoH Server gesichert"
        BackupDohNotFound = "Keine DoH Konfiguration gefunden"
        BackupDohNotAvailable = "DoH nicht verfuegbar (Windows 11+ erforderlich)"
        BackupDohFailed = "DoH Backup fehlgeschlagen: {0}"
        BackupDohEncryptionTitle = "Backup DoH Encryption Preferences (Adapter-specific)..."
        BackupDohEncryptionSaved = "DoH Encryption Preferences: {0} Adapter, {1} DNS-Server"
        BackupDohEncryptionNotFound = "Keine DoH Encryption Preferences gefunden"
        BackupDohEncryptionNoAdapters = "Keine aktiven Netzwerkadapter gefunden"
        BackupDohEncryptionFailed = "DoH Encryption Preferences Backup fehlgeschlagen: {0}"
        BackupFirewallProfilesTitle = "Backup Firewall Profile Settings..."
        BackupFirewallProfilesSaved = "{0} Firewall Profile gesichert"
        BackupFirewallProfilesNotFound = "Keine Firewall Profiles gefunden"
        BackupFirewallProfilesFailed = "Firewall Profile Backup fehlgeschlagen: {0}"
        BackupDeviceLevelTitle = "Backup Device-Level App Permissions..."
        BackupDeviceLevelFailed = "Device-Level App '{0}' konnte nicht gebackuped werden: {1}"
        BackupDeviceLevelSaved = "{0} Device-Level App Permissions gesichert"
        BackupDeviceLevelNotFound = "Keine Device-Level App Permissions gefunden"
        BackupDeviceLevelError = "Device-Level Backup fehlgeschlagen: {0}"
        BackupConvertingJSON = "  [i] Konvertiere zu JSON (max 120s)..."
        BackupJSONTimeout = "JSON Timeout - versuche mit reduzierten Daten..."
        BackupJSONFallback = "  [i] FALLBACK: Ohne Firewall Rules"
        BackupJSONFailed = "JSON-Konvertierung fehlgeschlagen!"
        BackupJSONReduced = "  [OK] JSON erstellt (REDUZIERT)"
        BackupJSONComplete = "  [OK] JSON erstellt (VOLLSTAENDIG)"
        BackupJSONEmpty = "JSON-Konvertierung leer!"
        BackupJSONSize = "  [i] Groesse: {0} KB"
        BackupSavingFile = "  [i] Speichere Datei..."
        BackupFileTooSmall = "Backup-Datei zu klein!"
        BackupValidationTitle = "BACKUP-VALIDIERUNG"
        BackupValidating = "Validiere Backup-Datei..."
        BackupValidationFileTooSmall = "Backup-Validierung fehlgeschlagen: Datei zu klein ({0} KB)"
        BackupValidationFileSize = "  [OK] Dateigroesse: {0} KB"
        BackupValidationJSONOK = "  [OK] JSON-Format korrekt"
        BackupValidationNoSettings = "Backup-Validierung fehlgeschlagen: Settings-Objekt fehlt"
        BackupValidationNoTimestamp = "Backup-Validierung fehlgeschlagen: Timestamp fehlt"
        BackupValidationStructureOK = "  [OK] Backup-Struktur korrekt"
        BackupValidationJSONFailed = "  [WARN] JSON-Validierung fehlgeschlagen (nicht kritisch)"
        BackupValidationJSONError = "         Fehler: {0}"
        BackupValidationHint1 = "  HINWEIS: Das Backup wurde erstellt, aber Validierung schlug fehl."
        BackupValidationHint2 = "           Dies passiert manchmal bei PowerShell-JSON-Serialisierung."
        BackupValidationHint3 = "           Das Backup sollte trotzdem verwendbar sein!"
        BackupValidationEmpty = "  [WARN] Backup scheint leer zu sein"
        BackupValidationDataOK = "  [OK] Backup enthaelt Daten"
        BackupValidationSkipped = "  [WARN] JSON-Validierung uebersprungen (Backup sollte trotzdem nutzbar sein)"
        BackupValidationFile = "  Datei: {0}"
        BackupValidationSize = "  Groesse: {0} KB"
        BackupValidationStatusComplete = "  Status: Vollstaendig und gueltig"
        BackupValidationStatusCreated = "  Status: Erstellt (JSON-Validierung fehlgeschlagen)"
        BackupLastWarningTitle = "LETZTE WARNUNG VOR START"
        BackupLastWarningText = "  Nach ENTER startet das Hauptskript im Enforce Mode und zieht komplett durch!"
        BackupLastWarningAllModules = "  Alle Module werden ausgefuehrt - KEINE weiteren Abfragen!"
        BackupLastWarningAbort = "  Letzte Chance zum Abbrechen: STRG+C druecken"
        BackupLastWarningPressEnter = "  Druecken Sie ENTER um jetzt zu starten..."
        BackupConfirmed = "Backup bestaetigt - Hauptskript startet JETZT!"
        BackupFailedTitle = "[FAIL] BACKUP FEHLGESCHLAGEN!"
        BackupTempCleaned = "Temp-Backup-Datei bereinigt: {0}"
        BackupErrorWarningTitle = "WARNUNG: Backup konnte nicht erstellt werden!"
        BackupErrorContinuePrompt = "  Moechten Sie trotzdem OHNE Backup fortfahren?"
        BackupErrorContinueRisk = "  (Nicht empfohlen - Sie haben KEIN Safety Net!)"
        BackupErrorContinueYes = "  [J] Ja, trotzdem fortfahren (RISKANT!)"
        BackupErrorContinueNo = "  [N] Nein, abbrechen (EMPFOHLEN!)"
        BackupErrorContinueChoice = "  Ihre Wahl [J/N]: "
        BackupErrorUserContinues = "  [WARNUNG] User faehrt OHNE Backup fort!"
        BackupErrorNoSafetyNet = "  Hauptskript wird fortfahren - KEIN Safety Net!"
        BackupErrorUserAborted = "  [ABBRUCH] User hat abgebrochen - RICHTIGE Entscheidung!"
        BackupErrorWillNotContinue = "  Hauptskript wird NICHT fortfahren!"
        
        # Restore Script
        RestoreBanner = "RESTORE - Windows 11 Security Baseline Einstellungen"
        RestoreSearching = "Suche nach verfuegbaren Backups..."
        RestoreNoneFound = "Keine Backups gefunden in:"
        RestoreCreateFirst = "Erstellen Sie zuerst ein Backup mit: .\\Backup-SecurityBaseline.ps1"
        RestoreAvailable = "Verfuegbare Backups: {0} gefunden"
        RestoreShowingLatest = "Zeige die {0} neuesten Backups"
        RestoreShowAll = "Fuer alle Backups: Druecken Sie [A]"
        RestoreSelectPrompt = "Waehlen Sie ein Backup"
        RestoreOrCancel = "oder [0] zum Abbrechen:"
        RestoreShowingAll = "Zeige ALLE {0} Backups..."
        RestoreCancelled = "Abgebrochen."
        RestoreInvalidSelection = "Ungueltige Auswahl!"
        RestoreNotFound = "Backup-Datei nicht gefunden:"
        RestoreLoading = "Lade Backup..."
        RestoreLoaded = "Backup geladen"
        RestoreBackupDate = "Backup-Datum:"
        RestoreHostname = "Hostname:"
        RestoreOS = "OS:"
        RestoreLoadError = "Backup konnte nicht geladen werden:"
        RestoreLoadReasons = "Moegliche Ursachen:"
        RestoreLoadCorrupt = "Datei ist korrupt"
        RestoreLoadInvalid = "Ungueltiges JSON-Format"
        RestoreLoadModified = "Datei wurde manuell veraendert"
        RestoreWarningTitle = "!!! WARNUNG !!!"
        RestoreWarningText = "Dieses Script stellt ALLE Settings aus dem Backup wieder her!"
        RestoreWarningMeans = "Das bedeutet:"
        RestoreWarningDNS = "DNS wird zurueckgesetzt"
        RestoreWarningHosts = "Hosts-Datei wird ueberschrieben"
        RestoreWarningServices = "Services werden zurueckgesetzt"
        RestoreWarningFirewall = "Firewall-Regeln werden geloescht"
        RestoreWarningRegistry = "Registry-Keys werden zurueckgesetzt"
        RestoreWarningRisk = "SICHERHEITSRISIKO: System wird WENIGER sicher!"
        RestoreConfirm = "Moechten Sie WIRKLICH fortfahren? [J/N]:"
        RestoreStarting = "Starte Restore-Prozess..."
        RestoreDNS = "DNS Settings werden wiederhergestellt..."
        RestoreDNSOK = "DNS auf '{0}' wiederhergestellt:"
        RestoreDNSAuto = "DNS auf '{0}' auf AUTOMATISCH gesetzt"
        RestoreHosts = "Hosts-Datei wird wiederhergestellt..."
        RestoreHostsOK = "Hosts-Datei wiederhergestellt"
        RestoreHostsBackup = "Alte Hosts-Datei gesichert:"
        RestoreServices = "Services werden wiederhergestellt..."
        RestoreServicesOK = "StartType auf '{0}' gesetzt"
        RestoreServicesNotFound = "Service '{0}' existiert nicht mehr"
        RestoreFirewall = "Firewall-Regeln werden wiederhergestellt..."
        RestoreFirewallDeleting = "Loesche Custom Firewall-Regeln..."
        RestoreFirewallOK = "Regel '{0}' geloescht"
        RestoreFirewallRestoring = "Stelle Status aller Firewall-Regeln wieder her..."
        RestoreFirewallStatus = "Firewall-Regeln Status geprueft"
        RestoreFirewallChanged = "Regeln Status geaendert"
        RestoreFirewallNoData = "Keine Firewall-Backup-Daten gefunden"
        RestoreRegistry = "Registry-Keys werden wiederhergestellt..."
        RestoreRegistryOK = "Wert auf '{0}' gesetzt"
        RestoreRegistryDeleted = "geloescht (existierte urspruenglich nicht)"
        RestoreUsers = "User Accounts werden wiederhergestellt..."
        RestoreUsersRenamed = "Administrator-Account zurueckbenannt: '{0}' -> '{1}'"
        RestoreUsersEnabled = "Administrator-Account aktiviert"
        RestoreUsersDisabled = "Administrator-Account deaktiviert"
        RestoreUsersPasswordTitle = "WICHTIG: Passwort muss neu gesetzt werden!"
        RestoreUsersPasswordWarning = "Original-Passwort kann NICHT wiederhergestellt werden!"
        RestoreUsersPasswordPrompt = "Moechten Sie ein NEUES Passwort fuer '{0}' setzen? [J/N]:"
        RestoreUsersPasswordOptions = "Optionen:"
        RestoreUsersPasswordRandom = "[1] Generiere ZUFAELLIGES 20-Zeichen-Passwort (wird angezeigt!)"
        RestoreUsersPasswordCustom = "[2] Eigenes Passwort eingeben"
        RestoreUsersPasswordSkip = "[3] Ueberspringen"
        RestoreUsersPasswordChoose = "Waehlen Sie [1-3]:"
        RestoreUsersPasswordNew = "NEUES PASSWORT FUER '{0}':"
        RestoreUsersPasswordNote = "BITTE NOTIEREN SIE DIESES PASSWORT!"
        RestoreUsersPasswordSet = "Passwort gesetzt!"
        RestoreUsersPasswordSkipped = "Passwort-Setzung uebersprungen"
        RestoreUsersPasswordOldRandom = "Administrator hat noch das alte zufaellige Passwort!"
        RestoreUsersAlready = "Administrator-Account hat bereits Original-Namen"
        RestoreUsersNotFound = "Administrator-Account nicht gefunden"
        RestoreApps = "Apps werden wiederhergestellt..."
        RestoreAppsMissing = "Apps waren installiert, fehlen jetzt"
        RestoreAppsPackages = "Provisioned Packages im Backup gefunden!"
        RestoreAppsCanRestore = "Diese koennen wiederhergestellt werden"
        RestoreAppsPrompt = "Moechten Sie fehlende Apps wiederherstellen? [J/N]:"
        RestoreAppsRestoring = "Stelle Provisioned Packages wieder her..."
        RestoreAppsMayTakeTime = "(Dies kann einige Minuten dauern!)"
        RestoreAppsInstalling = "Installiere:"
        RestoreAppsMustReinstall = "Package muss ueber Microsoft Store installiert werden"
        RestoreAppsManual = "Packages muessen manuell installiert werden"
        RestoreAppsOpenStore = "Oeffnen Sie Microsoft Store und suchen Sie nach den Apps"
        RestoreAppsSkipped = "App-Wiederherstellung uebersprungen"
        RestoreAppsNone = "Keine Provisioned Packages im Backup"
        RestoreAppsStoreNote = "Apps koennen ueber Microsoft Store neu installiert werden"
        RestoreAppsList = "Fehlende Apps (Auswahl):"
        RestoreAppsMore = "... und {0} weitere"
        RestoreAppsListSaved = "Vollstaendige Liste auf Desktop nach Neustart verfuegbar"
        RestoreAppsAllPresent = "Alle Apps noch vorhanden"
        
        # Desktop App List File Content (German)
        AppListFileName = "Fehlende-Apps-Nach-Restore"
        AppListFileHeader = "FEHLENDE APPS NACH SECURITY BASELINE WIEDERHERSTELLUNG"
        AppListFileDate = "Datum:"
        AppListFileTotal = "Anzahl fehlender Apps:"
        AppListFileIntro = "Diese Apps wurden durch das Security Baseline Script entfernt\nund muessen manuell ueber den Microsoft Store neu installiert werden:"
        AppListFileHowToHeader = "NEUINSTALLATION:"
        AppListFileStep1 = "1. Microsoft Store oeffnen (Win + S, suche 'Microsoft Store')"
        AppListFileStep2 = "2. Jede App nach Namen suchen"
        AppListFileStep3 = "3. Auf 'Herunterladen' oder 'Installieren' klicken"
        AppListFileStep4 = "4. Apps werden neu installiert"
        AppListFileNote = "HINWEIS: Einige Apps sind moeglicherweise in Ihrer Region nicht verfuegbar\n         oder wurden von Microsoft eingestellt."
        RestoreDNSClear = "Leere DNS Cache..."
        RestoreDNSCleared = "DNS Cache geleert"
        RestoreDNSTimeout = "DNS Cache Flush Timeout - wird beim Neustart geleert"
        RestoreCompleted = "RESTORE ABGESCHLOSSEN"
        RestoreStats = "Statistik:"
        RestoreStatsSuccess = "Erfolgreich:"
        RestoreStatsFailed = "Fehlgeschlagen:"
        RestoreStatsSkipped = "Uebersprungen:"
        RestoreSomeErrors = "Einige Restore-Operationen sind fehlgeschlagen!"
        RestoreCheckLog = "Pruefen Sie das Log fuer Details:"
        RestoreRebootTitle = "NEUSTART EMPFOHLEN"
        RestoreRebootNeeded = "Einige Aenderungen benoetigen einen Neustart, um vollstaendig aktiv zu werden:"
        RestoreRebootServices = "Service-Aenderungen"
        RestoreRebootRegistry = "Registry-Aenderungen"
        RestoreRebootDNS = "DNS-Settings"
        RestoreRebootNow = "Moechten Sie JETZT neu starten? [J/N]:"
        RestoreRebooting = "Neustart in 10 Sekunden..."
        RestoreRebootAbort = "Druecken Sie STRG+C zum Abbrechen"
        RestoreRebootPostponed = "Neustart verschoben."
        RestoreRebootManual = "Bitte starten Sie manuell neu: shutdown /r /t 0"
    }
}

<#
.SYNOPSIS
    Gets a localized string for the current language.

.DESCRIPTION
    Retrieves a localized string from the global strings dictionary.
    Falls back to English if string not found in current language.
    Falls back to the key itself if not found in any language.

.PARAMETER Key
    The key of the localized string to retrieve.

.PARAMETER FallbackLanguage
    The fallback language to use if key not found. Default: 'en'

.EXAMPLE
    Get-LocalizedString 'MainMenuTitle'
    Returns the main menu title in the current language.

.EXAMPLE
    Get-LocalizedString 'CustomKey' -FallbackLanguage 'de'
    Returns the custom key with German as fallback.

.NOTES
    Requires $Global:Strings and $Global:CurrentLanguage to be initialized.
    Automatically handles missing keys and languages gracefully.
#>
function Get-LocalizedString {
    [CmdletBinding()]
    [OutputType([string])]
    param(
        [Parameter(Mandatory=$true, Position=0)]
        [string]$Key,
        
        [Parameter(Mandatory=$false, Position=1, ValueFromRemainingArguments=$true)]
        [object[]]$FormatArgs,
        
        [Parameter(Mandatory=$false)]
        [string]$DefaultLanguage = 'en'
    )
    
    # Validate global state
    if (-not $Global:Strings) {
        Write-Warning "Strings dictionary not initialized - returning key"
        return $Key
    }
    
    # Ensure current language is set
    if (-not (Test-Path Variable:\Global:CurrentLanguage) -or [string]::IsNullOrEmpty($Global:CurrentLanguage)) {
        Write-Verbose "CurrentLanguage not set - using fallback: $DefaultLanguage"
        $Global:CurrentLanguage = $DefaultLanguage
    }
    
    # Get the localized string
    $result = $null
    
    # Try current language first
    if ($Global:Strings.ContainsKey($Global:CurrentLanguage) -and 
        $Global:Strings[$Global:CurrentLanguage].ContainsKey($Key)) {
        $result = $Global:Strings[$Global:CurrentLanguage][$Key]
    }
    # Try fallback language
    elseif ($Global:Strings.ContainsKey($DefaultLanguage) -and 
        $Global:Strings[$DefaultLanguage].ContainsKey($Key)) {
        Write-Verbose "Key '$Key' not found in '$Global:CurrentLanguage' - using fallback: $DefaultLanguage"
        $result = $Global:Strings[$DefaultLanguage][$Key]
    }
    # Last resort: return the key itself
    else {
        Write-Warning "Localization key '$Key' not found in any language - returning key as string"
        $result = $Key
    }
    
    # Apply formatting if Format parameters provided
    if ($FormatArgs -and $FormatArgs.Count -gt 0) {
        try {
            $result = $result -f $FormatArgs
        }
        catch {
            Write-Warning "String formatting failed for key '$Key': $_"
        }
    }
    
    return $result
}

<#
.SYNOPSIS
    Displays a language selection menu and sets the global language.

.DESCRIPTION
    Shows an interactive menu allowing the user to select between
    English and German. Sets $Global:CurrentLanguage based on selection.
    
    The menu is displayed in both languages for accessibility.

.EXAMPLE
    Select-Language
    Displays the language selection menu and waits for user input.

.NOTES
    This function clears the host and displays a full-screen menu.
    The selected language is stored in $Global:CurrentLanguage.
    Valid values: 'en' (English) or 'de' (German)
#>
function Select-Language {
    [CmdletBinding()]
    [OutputType([string])]
    param()
    
    # Best Practice 25H2: Enable Strict Mode for Clear-Host in non-interactive sessions
    try {
        Clear-Host
    }
    catch {
        Write-Verbose "Clear-Host nicht verfuegbar (non-interactive session)"
    }
    
    Write-Host ""
    Write-Host "=============================================================================" -ForegroundColor Cyan
    Write-Host "" -ForegroundColor Cyan
    Write-Host "                NoID Privacy - Windows 11 25H2 Baseline" -ForegroundColor Cyan
    Write-Host "" -ForegroundColor Cyan
    Write-Host "               Maximum Security + Privacy + Performance" -ForegroundColor Cyan
    Write-Host "" -ForegroundColor Cyan
    Write-Host "=============================================================================" -ForegroundColor Cyan
    Write-Host ""
    
    Write-Host "=============================================================================" -ForegroundColor Yellow
    Write-Host "                   SELECT LANGUAGE / SPRACHE WAEHLEN" -ForegroundColor Yellow
    Write-Host "=============================================================================" -ForegroundColor Yellow
    Write-Host ""
    
    Write-Host "  [1] English" -ForegroundColor White
    Write-Host ""
    Write-Host "  [2] German / Deutsch" -ForegroundColor White
    Write-Host ""
    Write-Host "=============================================================================" -ForegroundColor Yellow
    Write-Host ""
    
    do {
        Write-Host "  Your choice / Ihre Wahl " -NoNewline -ForegroundColor Cyan
        Write-Host "[1/2]: " -NoNewline -ForegroundColor Gray
        $choice = Read-Host
        
        if ($choice -notin @('1', '2')) {
            Write-Host "  [ERROR] Invalid input! / Ungueltige Eingabe!" -ForegroundColor Red
            Write-Host ""
        }
    } while ($choice -notin @('1', '2'))
    
    if ($choice -eq '1') {
        $Global:CurrentLanguage = "en"
        Write-Host "`n  [OK] Language set to English" -ForegroundColor Green
    } else {
        $Global:CurrentLanguage = "de"
        Write-Host "`n  [OK] Sprache auf Deutsch gesetzt" -ForegroundColor Green
    }
    
    Start-Sleep -Seconds 1
}

# Note: Export-ModuleMember is not needed for dot-sourced scripts
# Functions are automatically available in the calling scope
# This file is loaded with: . "$scriptDir\Modules\SecurityBaseline-Localization.ps1"
